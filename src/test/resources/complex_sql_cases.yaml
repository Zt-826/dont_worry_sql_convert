- comment: 复杂SQL-1
  oracle_sql: >
    SELECT
    	*
    FROM
    	fzacc a ,
    	FZEACC b
    WHERE
    	a.EACCNO = b.EACCNO(+)
    	AND (EXISTS (
    	SELECT
    		1
    	FROM
    		UTIUSERGRADE u2 ,
    		PRPDUSER p
    	WHERE
    		u2.USERCODE = p.USERCODE(+)
    		AND u2.COMCODE IN (
    		SELECT
    			k.COMCODE
    		FROM
    			fzcheck k,
    			FZCHECK z
    		WHERE
    			k.ACCCHECKNO = z.ACCCHECKNO(+)
    			AND k.OBJECTID = b.OBJECTID
    			AND z.OBJECTID IS NOT NULL)
    		AND b.OBJECTID = u2.OBJECTID))
  tidb_sql: >
    select * from fzacc a left join fzeacc b on a.eaccno = b.eaccno where exists ( select 1 from utiusergrade u2 left join prpduser p on u2.usercode = p.usercode where b.objectid = u2.objectid and u2.comcode in ( select k.comcode from fzcheck k left join fzcheck z on k.acccheckno = z.acccheckno where k.objectid = b.objectid and (z.objectid is not null and z.objectid != '') ) )
- comment: 复杂SQL-2
  oracle_sql: >
    select
      *
    from
      tableA a,
      tableB b
    where
      a.id = b.id(+)
    AND (
        EXISTS
        (
          SELECT
            1
          FROM
            reinsvalidriskunit e,
            tableD d
          WHERE
            e.id = d.id( +)
          and e.policyno IN
            (
              SELECT
                f.certifyno
              FROM
                reinsenquiryregisterbinding f,
                tableN n
              WHERE
                f.id(+)        = n.id
              and f.certitype  = 'P'
              AND b.SEQUENCENO = f.SEQUENCENO
              AND f.VALIDFLAG  = '1' )
          AND b.certifyno      = e.certifyno ))
  tidb_sql: select * from tablea a left join tableb b on a.id = b.id where exists ( select 1 from reinsvalidriskunit e left join tabled d on e.id = d.id where b.certifyno = e.certifyno and e.policyno in ( select f.certifyno from reinsenquiryregisterbinding f right join tablen n on n.id = f.id where b.sequenceno = f.sequenceno and f.certitype = 'p' and f.validflag = '1' ) )
- comment: 复杂SQL-3
  oracle_sql: >
    Select
      x.payNo                                       ,
      x.Accreinscode Paycode                        ,
      x.Freinsname                                  ,
      x.Freinscode                                  ,
      x.treatyename                                 ,
      x.Accno                                       ,
      x.acckind                                     ,
      x.Riskcode                                    ,
      x.Riskname                                    ,
      x.Repolicyno                                  ,
      x.Recertifyno                                 ,
      x.Drcertifyno                                 ,
      To_Char(x.Settledate, 'yyyy-mm-dd') Settledate,
      x.Treatyno                                    ,
      x.Sectionno                                   ,
      x.uwyear                                      ,
      x.Accperiod                                   ,
      x.Buscurrency                                 ,
      x.balance1                                    ,
      x.Acccurrency                                 ,
      x.balance                                     ,
      x.Serialbalance                               ,
      x.Freinsbalance                               ,
      x.reinsurerBalance                            ,
      x.Busandaccexchrate                           ,
      x.Codeename                                   ,
      x.Acckinds                                    ,
      x.Taxflag                                     ,
      x.Withholdflag                                ,
      x.Codecname                                   ,
      x.Writtendate                                 ,
      x.Yourref                                     ,
      x.Youraccno                                   ,
      x.writeFlag                                   ,
      x.writeOffFlag                                ,
      x.settleApplyNo                               ,
      x.settleApplyStatus
    from
      (
        Select
          m.Freinsname       ,
          m.Freinscode       ,
          m.treatyename      ,
          m.Accno            ,
          m.Riskcode         ,
          m.Riskname         ,
          m.acckind          ,
          m.Repolicyno       ,
          m.Recertifyno      ,
          m.Drcertifyno      ,
          m.Settledate       ,
          m.Treatyno         ,
          m.Sectionno        ,
          m.uwyear           ,
          m.Accperiod        ,
          m.Buscurrency      ,
          m.balance1         ,
          m.Acccurrency      ,
          m.balance          ,
          m.Serialbalance    ,
          m.Freinsbalance    ,
          m.reinsurerBalance ,
          m.Busandaccexchrate,
          m.Codeename        ,
          m.Acckinds         ,
          m.Taxflag          ,
          m.Withholdflag     ,
          m.Accreinscode     ,
          m.Codecname        ,
          m.Writtendate      ,
          m.Yourref          ,
          m.Youraccno        ,
          m.payno            ,
          m.Settlestatus     ,
          m.Letter           ,
          m.writeFlag        ,
          m.writeOffFlag     ,
          Row_Number() Over
                            (
                              partition by m.Letter
                              Order By m.Accperiod,
                                m.Treatyno        ,
                                m.Accno           ,
                                m.Sectionno       ,
                                m.Freinscode      ,
                                m.Codecname       ,
                                m.treatyename     ,
                                m.Buscurrency     ,
                                m.balance1
                            )
          As Serialno     ,
          '' settleApplyNo,
          '' settleApplyStatus
        from
          (
            Select
              h.Freinsname ,
              h.Freinscode ,
              h.treatyename,
              h.Accno      ,
              h.Riskcode   ,
              h.Riskname   ,
              h.acckind    ,
              h.Repolicyno ,
              h.Recertifyno,
              h.Drcertifyno,
              h.Settledate ,
              h.Treatyno   ,
              h.Sectionno  ,
              h.uwyear     ,
              h.Accperiod  ,
              h.Buscurrency,
              sum(h.Busbalance) over
                                     (
                                       partition by h.accno
                                     )
              balance1     ,
              h.Acccurrency,
              sum(h.Accbalance) over
                                     (
                                       partition by h.accno
                                     )
              balance,
              sum(h.Accbalance) over
                                     (
                                       partition by h.accno,
                                         h.payno
                                     )
              Serialbalance               ,
              h.Freinsbalance             ,
              h.reinsurerBalance          ,
              h.busandaccexchrate         ,
              h.acckinds                  ,
              h.taxflag                   ,
              h.withholdflag              ,
              h.Accreinscode              ,
              h.writtendate               ,
              h.yourref                   ,
              h.youraccno                 ,
              Decode(h.Facflag            ,
                  '1'                     ,'特约-' || e.Codeename,
                    e.Codeename) Codeename,
              e.Codecname                 ,
              h.Settlestatus              ,
              h.payno                     ,
              h.Letter                    ,
              h.writeFlag                 ,
              h.writeOffFlag
            from
              (
                Select
                  b.longName Freinsname                                     ,
                  a.Freinscode                                              ,
                  c.OPTTYPE                                                 ,
                  d.treatyename                                             ,
                  c.Accno                                                   ,
                  '' As Riskcode                                            ,
                  '' As Riskname                                            ,
                  '合约' acckind                                              ,
                  '' As Repolicyno                                          ,
                  '' As Recertifyno                                         ,
                  '' As Drcertifyno                                         ,
                  a.Settledate                                              ,
                  c.Treatyno                                                ,
                  c.Sectionno                                               ,
                  c.uwyear                                                  ,
                  c.Accperiod                                               ,
                  c.writeFlag                                               ,
                  sum(a.Busbalance) Busbalance                              ,
                  sum(a.Accbalance) Accbalance                              ,
                  (Sum(a.Accbalance) - Sum(a.Accpaidvalue)) Freinsbalance   ,
                  (Sum(a.Busbalance) - Sum(a.busPaidValue)) reinsurerBalance,
                  a.Buscurrency                                             ,
                  a.Acccurrency                                             ,
                  a.busandaccexchrate                                       ,
                  c.acckind acckinds                                        ,
                  c.taxflag                                                 ,
                  c.withholdflag                                            ,
                  c.Accreinscode                                            ,
                  c.writtendate                                             ,
                  c.yourref                                                 ,
                  c.youraccno                                               ,
                  a.Settlestatus                                            ,
                  decode(substr(d.Treatytype, 0, 1)                         ,
                      '7'                                                   ,a.payno,
                        1) payno                                            ,
                  c.Acctype                                                 ,
                  c.Facflag                                                 ,
                  decode(substr(d.Treatytype, 0, 1)                         ,
                      '7'                                                   ,'B',
                        'A') As Letter                                      ,
                  decode(c.writeOffFlag                                     ,
                      '0'                                                   , '',
                        '1'                                                 , '冲销账') as writeOffFlag
                From
                  Fzplanmain a,
                  Fzacc c     ,
                  (
                    select
                      treatyno   ,
                      treatyename,
                      Treatytype ,
                      accperiod
                    from
                      Fhtreaty) d,
                  fdReins b
                Where
                  a.Accno        = c.Accno
                And c.Treatyno   = d.Treatyno
                and a.Freinscode = b.REINSCODE(+)
                And c.Opttype    = ''
                And (
                    case
                      substr(d.Treatytype, 0, 1)
                    when
                      '7'
                    then
                      decode(c.Acckind,
                          'O'         , 0,
                            'L'       , 0,
                              1)
                    else
                      decode(d.Accperiod    ,
                          'P'               ,decode(c.Acckind,
                              'P'           ,0,
                                'E'         ,0,
                                  'C'       ,0,1),
                            decode(c.Acckind,
                                'I'         , 0,
                                  1))
                    end)           = 1
                And c.Confirmstate = '1'
                And c.Accreinscode In ('')
                And c.Acccurrency  In ('')
                And c.Acctype = '11'
                Group By
                  c.OPTTYPE                        ,
                  b.longName                       ,
                  a.Freinscode                     ,
                  d.treatyename                    ,
                  c.Accno                          ,
                  a.Settledate                     ,
                  c.Treatyno                       ,
                  c.Sectionno                      ,
                  c.uwyear                         ,
                  c.Accperiod                      ,
                  a.Buscurrency                    ,
                  a.Acccurrency                    ,
                  a.busandaccexchrate              ,
                  c.acckind                        ,
                  c.taxflag                        ,
                  c.withholdflag                   ,
                  c.Accreinscode                   ,
                  c.writtendate                    ,
                  c.yourref                        ,
                  c.youraccno                      ,
                  d.Treatytype                     ,
                  a.Settlestatus                   ,
                  decode(substr(d.Treatytype, 0, 1),
                      '7'                          ,a.payno,
                        1)                         ,
                  c.Acctype                        ,
                  c.Facflag                        ,
                  c.writeOffFlag                   ,
                  c.writeFlag) h
            Left Join
              Fdcode e
            On
              h.Acckinds      = e.Codetype
            And h.Acctype     = e.Codecode
            and h.opttype     = e.codedesc
            And e.Newcodecode = 'fdsettleConfig') m
        where
          1 = 1
        and m.Settlestatus in ('0',
                              '1')
        And to_date(to_char(m.SettleDate, 'yyyy-mm-dd'), 'yyyy-mm-dd') <= to_date(to_char('', 'yyyy-mm-dd'), 'yyyy-mm-dd')

        union all

        Select
          m.Freinsname       ,
          m.Freinscode       ,
          m.treatyename      ,
          m.Accno            ,
          m.Riskcode         ,
          m.Riskname         ,
          m.acckind          ,
          m.Repolicyno       ,
          m.Recertifyno      ,
          m.Drcertifyno      ,
          m.Settledate       ,
          m.Treatyno         ,
          m.Sectionno        ,
          m.uwyear           ,
          m.Accperiod        ,
          m.Buscurrency      ,
          m.balance1         ,
          m.Acccurrency      ,
          m.balance          ,
          m.Serialbalance    ,
          m.Freinsbalance    ,
          m.reinsurerBalance ,
          m.Busandaccexchrate,
          m.Codeename        ,
          m.Acckinds         ,
          m.Taxflag          ,
          m.Withholdflag     ,
          m.Accreinscode     ,
          m.Codecname        ,
          m.Writtendate      ,
          m.Yourref          ,
          m.Youraccno        ,
          m.payno            ,
          m.Settlestatus     ,
          m.Letter           ,
          m.writeFlag        ,
          m.writeOffFlag     ,
          Row_Number() Over
                            (
                              partition by m.Letter
                              Order By m.Codecname,
                                m.Accperiod       ,
                                m.Treatyno        ,
                                m.Sectionno       ,
                                m.Freinscode      ,
                                m.treatyename     ,
                                m.Buscurrency     ,
                                m.balance1
                            )
          As Serialno     ,
          '' settleApplyNo,
          '' settleApplyStatus
        from
          (
            Select
              h.Freinsname ,
              h.Freinscode ,
              h.treatyename,
              h.Accno      ,
              h.Riskcode   ,
              h.Riskname   ,
              h.acckind    ,
              h.Repolicyno ,
              h.Recertifyno,
              h.Drcertifyno,
              h.Settledate ,
              h.Treatyno   ,
              h.Sectionno  ,
              h.uwyear     ,
              h.Accperiod  ,
              h.Buscurrency,
              sum(h.Busbalance) over
                                     (
                                       partition by h.accno
                                     )
              balance1     ,
              h.Acccurrency,
              sum(h.Accbalance) over
                                     (
                                       partition by h.accno
                                     )
              balance,
              sum(h.Accbalance) over
                                     (
                                       partition by h.accno,
                                         h.payno
                                     )
              Serialbalance               ,
              h.Freinsbalance             ,
              h.reinsurerBalance          ,
              h.busandaccexchrate         ,
              h.acckinds                  ,
              h.taxflag                   ,
              h.withholdflag              ,
              h.Accreinscode              ,
              h.writtendate               ,
              h.yourref                   ,
              h.youraccno                 ,
              h.writeFlag                 ,
              Decode(h.Facflag            ,
                  '1'                     , '特约-' || e.Codeename,
                    e.Codeename) Codeename,
              Decode(e.Codetype           ,
                  'X'                     , '0',
                    e.Codecname) Codecname,
              h.Settlestatus              ,
              h.payno                     ,
              h.Letter                    ,
              h.writeOffFlag
            from
              (
                Select
                  b.longName Freinsname                                     ,
                  a.Freinscode                                              ,
                  c.OPTTYPE                                                 ,
                  d.treatyename                                             ,
                  c.Accno                                                   ,
                  '' As Riskcode                                            ,
                  '' As Riskname                                            ,
                  '合约' acckind                                              ,
                  '' As Repolicyno                                          ,
                  '' As Recertifyno                                         ,
                  '' As Drcertifyno                                         ,
                  a.Settledate                                              ,
                  c.Treatyno                                                ,
                  to_char(c.layerNo) as Sectionno                           ,
                  c.uwyear                                                  ,
                  decode(c.accKind                                          ,
                      'X'                                                   , to_char(a.payno),
                        c.accPeriod) Accperiod                              ,
                  c.writeFlag                                               ,
                  sum(a.Busbalance) Busbalance                              ,
                  sum(a.Accbalance) Accbalance                              ,
                  (Sum(a.Accbalance) - Sum(a.Accpaidvalue)) Freinsbalance   ,
                  (Sum(a.Busbalance) - Sum(a.busPaidValue)) reinsurerBalance,
                  a.Buscurrency                                             ,
                  a.Acccurrency                                             ,
                  a.busandaccexchrate                                       ,
                  c.acckind acckinds                                        ,
                  c.taxflag                                                 ,
                  c.withholdflag                                            ,
                  c.Accreinscode                                            ,
                  c.writtendate                                             ,
                  c.yourref                                                 ,
                  c.youraccno                                               ,
                  a.Settlestatus                                            ,
                  decode(substr(d.Treatytype, 0, 1)                         ,
                      '7'                                                   , a.payno,
                        1) payno                                            ,
                  c.Acctype                                                 ,
                  c.Facflag                                                 ,
                  decode(substr(d.Treatytype, 0, 1)                         ,
                      '7'                                                   , 'B',
                        'A') As Letter                                      ,
                  decode(c.writeOffFlag                                     ,
                      '0'                                                   , '',
                        '1'                                                 , '冲销账') as writeOffFlag
                From
                  Fzplanmain a,
                  Fzacc c     ,
                  (
                    select
                      treatyno   ,
                      treatyename,
                      Treatytype ,
                      ''
                    from
                      Fhxtreaty) d,
                  fdReins b
                Where
                  a.Accno        = c.Accno
                And c.Treatyno   = d.Treatyno
                and a.Freinscode = b.REINSCODE(+)
                And c.Opttype    = ''
                And (
                    case
                      substr(d.Treatytype, 0, 1)
                    when
                      '7'
                    then
                      decode(c.Acckind,
                          'O'         , 0,
                            'L'       , 0,
                              1)
                    end)           = 1
                And c.Confirmstate = '1'
                And c.Accreinscode In ('')
                And c.Acccurrency  In ('')
                And c.Acctype = '11'
                Group By
                  c.OPTTYPE                        ,
                  b.longName                       ,
                  a.Freinscode                     ,
                  d.treatyename                    ,
                  c.Accno                          ,
                  a.Settledate                     ,
                  c.Treatyno                       ,
                  c.layerNo                        ,
                  c.uwyear                         ,
                  decode(c.accKind                 ,
                      'X'                          , to_char(a.payno),
                        c.accPeriod)               ,
                  a.Buscurrency                    ,
                  a.Acccurrency                    ,
                  a.busandaccexchrate              ,
                  c.acckind                        ,
                  c.taxflag                        ,
                  c.withholdflag                   ,
                  c.Accreinscode                   ,
                  c.writtendate                    ,
                  c.yourref                        ,
                  c.youraccno                      ,
                  d.Treatytype                     ,
                  a.Settlestatus                   ,
                  decode(substr(d.Treatytype, 0, 1),
                      '7'                          , a.payno,
                        1)                         ,
                  c.Acctype                        ,
                  c.Facflag                        ,
                  c.writeOffFlag                   ,
                  c.writeFlag) h
            Left Join
              Fdcode e
            On
              h.Acckinds      = e.Codetype
            And h.Acctype     = e.Codecode
            and h.opttype     = e.codedesc
            And e.Newcodecode = 'fdsettleConfig') m
        where
          1 = 1
        and m.Settlestatus in ('0',
                              '1')
        And to_date(to_char(m.SettleDate, 'yyyy-mm-dd'), 'yyyy-mm-dd') <= to_date(to_char('', 'yyyy-mm-dd'), 'yyyy-mm-dd')

        union all

        Select
          m.Freinsname                                                                                                                                 ,
          m.Freinscode                                                                                                                                 ,
          m.Insuredname treatyename                                                                                                                    ,
          m.Accno                                                                                                                                      ,
          m.Riskcode                                                                                                                                   ,
          m.Riskname                                                                                                                                   ,
          m.acckind                                                                                                                                    ,
          m.Repolicyno                                                                                                                                 ,
          m.Recertifyno                                                                                                                                ,
          m.Drcertifyno                                                                                                                                ,
          m.Settledate                                                                                                                                 ,
          m.Treatyno                                                                                                                                   ,
          m.Sectionno                                                                                                                                  ,
          m.uwyear                                                                                                                                     ,
          m.Accperiod                                                                                                                                  ,
          m.Buscurrency                                                                                                                                ,
          m.balance1                                                                                                                                   ,
          m.Acccurrency                                                                                                                                ,
          m.balance                                                                                                                                    ,
          m.Serialbalance                                                                                                                              ,
          m.Freinsbalance                                                                                                                              ,
          m.reinsurerBalance                                                                                                                           ,
          m.Busandaccexchrate                                                                                                                          ,
          m.Codeename                                                                                                                                  ,
          m.Acckinds                                                                                                                                   ,
          m.Taxflag                                                                                                                                    ,
          m.Withholdflag                                                                                                                               ,
          m.Accreinscode                                                                                                                               ,
          m.Codecname                                                                                                                                  ,
          m.Writtendate                                                                                                                                ,
          m.Yourref                                                                                                                                    ,
          m.Youraccno                                                                                                                                  ,
          m.payno                                                                                                                                      ,
          m.Settlestatus                                                                                                                               ,
          m.Letter                                                                                                                                     ,
          m.writeFlag                                                                                                                                  ,
          m.writeOffFlag                                                                                                                               ,
          Row_Number() Over(Order By m.Codecname, m.uwyear, m.Drcertifyno, m.payno, m.Freinscode, m.Insuredname, m.Buscurrency, m.balance1) As Serialno,
          m.settleApplyNo                                                                                                                              ,
          m.settleApplyStatus
        from
          (
            Select
              h.Freinsname         ,
              h.Freinscode         ,
              h.Insuredname        ,
              h.Accno              ,
              h.Riskcode           ,
              h.Riskname           ,
              h.acckind            ,
              h.Repolicyno         ,
              h.Recertifyno        ,
              h.Drcertifyno        ,
              h.Settledate         ,
              h.Treatyno           ,
              h.Sectionno          ,
              h.uwyear             ,
              h.Accperiod          ,
              h.Buscurrency        ,
              h.Busbalance balance1,
              h.Acccurrency        ,
              h.Accbalance balance ,
              (
                select
                  sum(ACCBALANCE)
                from
                  FZPLANMAIN x
                where
                  x.ACCNO   = h.ACCNO
                and x.PAYNO = h.PAYNO) Serialbalance,
              h.Freinsbalance                       ,
              h.reinsurerBalance                    ,
              h.busandaccexchrate                   ,
              h.acckinds                            ,
              h.taxflag                             ,
              h.withholdflag                        ,
              h.Accreinscode                        ,
              h.writtendate                         ,
              h.yourref                             ,
              h.youraccno                           ,
              h.writeFlag                           ,
              Decode(h.Facflag                      ,
                  '1'                               , '特约-' || e.Codeename,
                    e.Codeename) Codeename          ,
              e.Codecname                           ,
              h.Settlestatus                        ,
              h.payno                               ,
              h.Letter                              ,
              h.writeOffFlag                        ,
              h.settleApplyNo                       ,
              h.settleApplyStatus
            from
              (
                Select
                  b.longName Freinsname                                     ,
                  a.Freinscode                                              ,
                  c.OPTTYPE                                                 ,
                  c.Insuredname                                             ,
                  c.Accno                                                   ,
                  c.Riskcode                                                ,
                  d.Riskcname Riskname                                      ,
                  '临分' || '-' || decode(c.Acckind                           ,
                      'P'                                                   , '保单',
                        'H'                                                 , '保单',
                          'E'                                               , '批单',
                            'J'                                             , '批单',
                              'C'                                           , '赔案',
                                'K'                                         , '赔案',
                                  '') acckind                               ,
                  c.Repolicyno                                              ,
                  c.Recertifyno                                             ,
                  c.Drcertifyno                                             ,
                  a.Settledate                                              ,
                  '' As Treatyno                                            ,
                  '' As Sectionno                                           ,
                  c.uwyear                                                  ,
                  c.writeFlag                                               ,
                  a.payno || '' Accperiod                                   ,
                  c.Busbalance                                              ,
                  c.Accbalance                                              ,
                  (Sum(a.Accbalance) - Sum(a.Accpaidvalue)) Freinsbalance   ,
                  (Sum(a.Busbalance) - Sum(a.busPaidValue)) reinsurerBalance,
                  a.Buscurrency                                             ,
                  a.Acccurrency                                             ,
                  a.busandaccexchrate                                       ,
                  c.acckind acckinds                                        ,
                  c.taxflag                                                 ,
                  c.withholdflag                                            ,
                  c.Accreinscode                                            ,
                  c.writtendate                                             ,
                  c.yourref                                                 ,
                  c.youraccno                                               ,
                  a.Settlestatus                                            ,
                  a.payno                                                   ,
                  c.Acctype                                                 ,
                  c.Facflag                                                 ,
                  'C' As Letter                                             ,
                  decode(c.writeOffFlag                                     ,
                      '0'                                                   , '',
                        '1'                                                 , '冲销账') as writeOffFlag,
                  a.settleApplyNo                                           ,
                  a.settleApplyStatus
                From
                  Fzplanmain a,
                  Fzacc c     ,
                  fdrisk d    ,
                  fdReins b
                Where
                  a.Accno          = c.Accno
                And c.riskcode     = d.riskcode
                and a.Freinscode   = b.REINSCODE(+)
                And c.Opttype      = ''
                And c.Confirmstate = '1'
                And c.Accreinscode In ('')
                And c.Acccurrency  In ('')
                And c.Acctype = '10'
                Group By
                  c.OPTTYPE          ,
                  b.longName         ,
                  a.Freinscode       ,
                  c.Insuredname      ,
                  c.Accno            ,
                  c.Riskcode         ,
                  d.Riskcname        ,
                  c.Repolicyno       ,
                  c.Recertifyno      ,
                  c.Drcertifyno      ,
                  a.Settledate       ,
                  c.Treatyno         ,
                  c.Sectionno        ,
                  c.uwyear           ,
                  a.Buscurrency      ,
                  a.Acccurrency      ,
                  a.busandaccexchrate,
                  c.acckind          ,
                  c.taxflag          ,
                  c.withholdflag     ,
                  c.Accreinscode     ,
                  c.writtendate      ,
                  c.yourref          ,
                  c.youraccno        ,
                  a.Settlestatus     ,
                  a.payno            ,
                  c.Acctype          ,
                  c.Facflag          ,
                  c.writeOffFlag     ,
                  c.writeFlag        ,
                  a.settleApplyNo    ,
                  a.settleApplyStatus,
                  a.Accbalance       ,
                  a.Busbalance       ,
                  a.Accpaidvalue     ,
                  a.busPaidValue     ,
                  c.Accbalance       ,
                  c.Busbalance) h
            Left Join
              Fdcode e
            On
              h.Acckinds      = e.Codetype
            And h.Acctype     = e.Codecode
            and h.opttype     = e.codedesc
            And e.Newcodecode = 'fdsettleConfig') m
        where
          1 = 1
        and m.Settlestatus in ('0',
                              '1')
        And to_date(to_char(m.SettleDate, 'yyyy-mm-dd'), 'yyyy-mm-dd') <= to_date(to_char('', 'yyyy-mm-dd'), 'yyyy-mm-dd')) x
    where
      (
        x.Freinsbalance       <> 0
        or x.reinsurerBalance <> 0)
    order by
      Decode(x.Acccurrency  ,
          'CNY'             , '1',
            'USD'           , '2',
              x.Acccurrency),
      x.Letter              ,
      x.Serialno
  tidb_sql: >
    select x.payno, x.accreinscode as paycode, x.freinsname, x.freinscode, x.treatyename , x.accno, x.acckind, x.riskcode, x.riskname, x.repolicyno , x.recertifyno, x.drcertifyno, date_format(x.settledate, '%y-%m-%d') as settledate , x.treatyno, x.sectionno, x.uwyear, x.accperiod, x.buscurrency , x.balance1, x.acccurrency, x.balance, x.serialbalance, x.freinsbalance , x.reinsurerbalance, x.busandaccexchrate, x.codeename, x.acckinds, x.taxflag , x.withholdflag, x.codecname, x.writtendate, x.yourref, x.youraccno , x.writeflag, x.writeoffflag, x.settleapplyno, x.settleapplystatus from ( select m.freinsname, m.freinscode, m.treatyename, m.accno, m.riskcode , m.riskname, m.acckind, m.repolicyno, m.recertifyno, m.drcertifyno , m.settledate, m.treatyno, m.sectionno, m.uwyear, m.accperiod , m.buscurrency, m.balance1, m.acccurrency, m.balance, m.serialbalance , m.freinsbalance, m.reinsurerbalance, m.busandaccexchrate, m.codeename, m.acckinds , m.taxflag, m.withholdflag, m.accreinscode, m.codecname, m.writtendate , m.yourref, m.youraccno, m.payno, m.settlestatus, m.letter , m.writeflag, m.writeoffflag, row_number() over (partition by m.letter order by m.accperiod, m.treatyno, m.accno, m.sectionno, m.freinscode, m.codecname, m.treatyename, m.buscurrency, m.balance1) as serialno, '' as settleapplyno , '' as settleapplystatus from ( select h.freinsname, h.freinscode, h.treatyename, h.accno, h.riskcode , h.riskname, h.acckind, h.repolicyno, h.recertifyno, h.drcertifyno , h.settledate, h.treatyno, h.sectionno, h.uwyear, h.accperiod , h.buscurrency, sum(h.busbalance) over (partition by h.accno) as balance1, h.acccurrency , sum(h.accbalance) over (partition by h.accno) as balance , sum(h.accbalance) over (partition by h.accno, h.payno) as serialbalance, h.freinsbalance , h.reinsurerbalance, h.busandaccexchrate, h.acckinds, h.taxflag, h.withholdflag , h.accreinscode, h.writtendate, h.yourref, h.youraccno , case h.facflag when '1' then concat('特约-', e.codeename) else e.codeename end as codeename , e.codecname, h.settlestatus, h.payno, h.letter, h.writeflag , h.writeoffflag from ( select b.longname as freinsname, a.freinscode, c.opttype, d.treatyename, c.accno , '' as riskcode, '' as riskname, '合约' as acckind, '' as repolicyno, '' as recertifyno , '' as drcertifyno, a.settledate, c.treatyno, c.sectionno, c.uwyear , c.accperiod, c.writeflag, sum(a.busbalance) as busbalance , sum(a.accbalance) as accbalance , sum(a.accbalance) - sum(a.accpaidvalue) as freinsbalance , sum(a.busbalance) - sum(a.buspaidvalue) as reinsurerbalance , a.buscurrency, a.acccurrency, a.busandaccexchrate, c.acckind as acckinds, c.taxflag , c.withholdflag, c.accreinscode, c.writtendate, c.yourref, c.youraccno , a.settlestatus , case substring(d.treatytype, 1, 1) when '7' then a.payno else 1 end as payno , c.acctype, c.facflag , case substring(d.treatytype, 1, 1) when '7' then 'b' else 'a' end as letter , case c.writeoffflag when '0' then '' when '1' then '冲销账' else null end as writeoffflag from fzplanmain a join fzacc c on a.accno = c.accno join ( select treatyno, treatyename, treatytype, accperiod from fhtreaty ) d on c.treatyno = d.treatyno left join fdreins b on a.freinscode = b.reinscode where c.opttype = '' and case substring(d.treatytype, 1, 1) when '7' then case c.acckind when 'o' then 0 when 'l' then 0 else 1 end else case d.accperiod when 'p' then case c.acckind when 'p' then 0 when 'e' then 0 when 'c' then 0 else 1 end else case c.acckind when 'i' then 0 else 1 end end end = 1 and c.confirmstate = '1' and c.acctype = '11' and c.acccurrency in ('') and c.accreinscode in ('') group by c.opttype, b.longname, a.freinscode, d.treatyename, c.accno, a.settledate, c.treatyno, c.sectionno, c.uwyear, c.accperiod, a.buscurrency, a.acccurrency, a.busandaccexchrate, c.acckind, c.taxflag, c.withholdflag, c.accreinscode, c.writtendate, c.yourref, c.youraccno, d.treatytype, a.settlestatus, case substring(d.treatytype, 1, 1) when '7' then a.payno else 1 end, c.acctype, c.facflag, c.writeoffflag, c.writeflag ) h left join fdcode e on h.acckinds = e.codetype and h.acctype = e.codecode and h.opttype = e.codedesc and e.newcodecode = 'fdsettleconfig' ) m where 1 = 1 and m.settlestatus in ('0', '1') and str_to_date(date_format(m.settledate, '%y-%m-%d'), '%y-%m-%d') <= str_to_date(date_format('', '%y-%m-%d'), '%y-%m-%d') union all select m.freinsname, m.freinscode, m.treatyename, m.accno, m.riskcode , m.riskname, m.acckind, m.repolicyno, m.recertifyno, m.drcertifyno , m.settledate, m.treatyno, m.sectionno, m.uwyear, m.accperiod , m.buscurrency, m.balance1, m.acccurrency, m.balance, m.serialbalance , m.freinsbalance, m.reinsurerbalance, m.busandaccexchrate, m.codeename, m.acckinds , m.taxflag, m.withholdflag, m.accreinscode, m.codecname, m.writtendate , m.yourref, m.youraccno, m.payno, m.settlestatus, m.letter , m.writeflag, m.writeoffflag, row_number() over (partition by m.letter order by m.codecname, m.accperiod, m.treatyno, m.sectionno, m.freinscode, m.treatyename, m.buscurrency, m.balance1) as serialno, '' as settleapplyno , '' as settleapplystatus from ( select h.freinsname, h.freinscode, h.treatyename, h.accno, h.riskcode , h.riskname, h.acckind, h.repolicyno, h.recertifyno, h.drcertifyno , h.settledate, h.treatyno, h.sectionno, h.uwyear, h.accperiod , h.buscurrency, sum(h.busbalance) over (partition by h.accno) as balance1, h.acccurrency , sum(h.accbalance) over (partition by h.accno) as balance , sum(h.accbalance) over (partition by h.accno, h.payno) as serialbalance, h.freinsbalance , h.reinsurerbalance, h.busandaccexchrate, h.acckinds, h.taxflag, h.withholdflag , h.accreinscode, h.writtendate, h.yourref, h.youraccno, h.writeflag , case h.facflag when '1' then concat('特约-', e.codeename) else e.codeename end as codeename , case e.codetype when 'x' then '0' else e.codecname end as codecname , h.settlestatus, h.payno, h.letter, h.writeoffflag from ( select b.longname as freinsname, a.freinscode, c.opttype, d.treatyename, c.accno , '' as riskcode, '' as riskname, '合约' as acckind, '' as repolicyno, '' as recertifyno , '' as drcertifyno, a.settledate, c.treatyno, convert(c.layerno, char) as sectionno , c.uwyear , case c.acckind when 'x' then convert(a.payno, char) else c.accperiod end as accperiod , c.writeflag, sum(a.busbalance) as busbalance, sum(a.accbalance) as accbalance , sum(a.accbalance) - sum(a.accpaidvalue) as freinsbalance , sum(a.busbalance) - sum(a.buspaidvalue) as reinsurerbalance , a.buscurrency, a.acccurrency, a.busandaccexchrate, c.acckind as acckinds, c.taxflag , c.withholdflag, c.accreinscode, c.writtendate, c.yourref, c.youraccno , a.settlestatus , case substring(d.treatytype, 1, 1) when '7' then a.payno else 1 end as payno , c.acctype, c.facflag , case substring(d.treatytype, 1, 1) when '7' then 'b' else 'a' end as letter , case c.writeoffflag when '0' then '' when '1' then '冲销账' else null end as writeoffflag from fzplanmain a join fzacc c on a.accno = c.accno join ( select treatyno, treatyename, treatytype, '' from fhxtreaty ) d on c.treatyno = d.treatyno left join fdreins b on a.freinscode = b.reinscode where c.opttype = '' and case substring(d.treatytype, 1, 1) when '7' then case c.acckind when 'o' then 0 when 'l' then 0 else 1 end end = 1 and c.confirmstate = '1' and c.acctype = '11' and c.acccurrency in ('') and c.accreinscode in ('') group by c.opttype, b.longname, a.freinscode, d.treatyename, c.accno, a.settledate, c.treatyno, c.layerno, c.uwyear, case c.acckind when 'x' then convert(a.payno, char) else c.accperiod end, a.buscurrency, a.acccurrency, a.busandaccexchrate, c.acckind, c.taxflag, c.withholdflag, c.accreinscode, c.writtendate, c.yourref, c.youraccno, d.treatytype, a.settlestatus, case substring(d.treatytype, 1, 1) when '7' then a.payno else 1 end, c.acctype, c.facflag, c.writeoffflag, c.writeflag ) h left join fdcode e on h.acckinds = e.codetype and h.acctype = e.codecode and h.opttype = e.codedesc and e.newcodecode = 'fdsettleconfig' ) m where 1 = 1 and m.settlestatus in ('0', '1') and str_to_date(date_format(m.settledate, '%y-%m-%d'), '%y-%m-%d') <= str_to_date(date_format('', '%y-%m-%d'), '%y-%m-%d') union all select m.freinsname, m.freinscode, m.insuredname as treatyename, m.accno, m.riskcode , m.riskname, m.acckind, m.repolicyno, m.recertifyno, m.drcertifyno , m.settledate, m.treatyno, m.sectionno, m.uwyear, m.accperiod , m.buscurrency, m.balance1, m.acccurrency, m.balance, m.serialbalance , m.freinsbalance, m.reinsurerbalance, m.busandaccexchrate, m.codeename, m.acckinds , m.taxflag, m.withholdflag, m.accreinscode, m.codecname, m.writtendate , m.yourref, m.youraccno, m.payno, m.settlestatus, m.letter , m.writeflag, m.writeoffflag, row_number() over (order by m.codecname, m.uwyear, m.drcertifyno, m.payno, m.freinscode, m.insuredname, m.buscurrency, m.balance1) as serialno, m.settleapplyno , m.settleapplystatus from ( select h.freinsname, h.freinscode, h.insuredname, h.accno, h.riskcode , h.riskname, h.acckind, h.repolicyno, h.recertifyno, h.drcertifyno , h.settledate, h.treatyno, h.sectionno, h.uwyear, h.accperiod , h.buscurrency, h.busbalance as balance1, h.acccurrency, h.accbalance as balance , ( select sum(accbalance) from fzplanmain x where x.accno = h.accno and x.payno = h.payno ) as serialbalance, h.freinsbalance, h.reinsurerbalance, h.busandaccexchrate, h.acckinds , h.taxflag, h.withholdflag, h.accreinscode, h.writtendate, h.yourref , h.youraccno, h.writeflag , case h.facflag when '1' then concat('特约-', e.codeename) else e.codeename end as codeename , e.codecname, h.settlestatus, h.payno, h.letter, h.writeoffflag , h.settleapplyno, h.settleapplystatus from ( select b.longname as freinsname, a.freinscode, c.opttype, c.insuredname, c.accno , c.riskcode, d.riskcname as riskname , concat('临分', '-', case c.acckind when 'p' then '保单' when 'h' then '保单' when 'e' then '批单' when 'j' then '批单' when 'c' then '赔案' when 'k' then '赔案' else '' end) as acckind , c.repolicyno, c.recertifyno, c.drcertifyno, a.settledate, '' as treatyno , '' as sectionno, c.uwyear, c.writeflag, concat(a.payno, '') as accperiod , c.busbalance, c.accbalance , sum(a.accbalance) - sum(a.accpaidvalue) as freinsbalance , sum(a.busbalance) - sum(a.buspaidvalue) as reinsurerbalance , a.buscurrency, a.acccurrency, a.busandaccexchrate, c.acckind as acckinds, c.taxflag , c.withholdflag, c.accreinscode, c.writtendate, c.yourref, c.youraccno , a.settlestatus, a.payno, c.acctype, c.facflag, 'c' as letter , case c.writeoffflag when '0' then '' when '1' then '冲销账' else null end as writeoffflag , a.settleapplyno, a.settleapplystatus from fzplanmain a join fzacc c on a.accno = c.accno join fdrisk d on c.riskcode = d.riskcode left join fdreins b on a.freinscode = b.reinscode where c.opttype = '' and c.confirmstate = '1' and c.acctype = '10' and c.acccurrency in ('') and c.accreinscode in ('') group by c.opttype, b.longname, a.freinscode, c.insuredname, c.accno, c.riskcode, d.riskcname, c.repolicyno, c.recertifyno, c.drcertifyno, a.settledate, c.treatyno, c.sectionno, c.uwyear, a.buscurrency, a.acccurrency, a.busandaccexchrate, c.acckind, c.taxflag, c.withholdflag, c.accreinscode, c.writtendate, c.yourref, c.youraccno, a.settlestatus, a.payno, c.acctype, c.facflag, c.writeoffflag, c.writeflag, a.settleapplyno, a.settleapplystatus, a.accbalance, a.busbalance, a.accpaidvalue, a.buspaidvalue, c.accbalance, c.busbalance ) h left join fdcode e on h.acckinds = e.codetype and h.acctype = e.codecode and h.opttype = e.codedesc and e.newcodecode = 'fdsettleconfig' ) m where 1 = 1 and m.settlestatus in ('0', '1') and str_to_date(date_format(m.settledate, '%y-%m-%d'), '%y-%m-%d') <= str_to_date(date_format('', '%y-%m-%d'), '%y-%m-%d') ) x where x.freinsbalance <> 0 or x.reinsurerbalance <> 0 order by case x.acccurrency when 'cny' then '1' when 'usd' then '2' else x.acccurrency end, x.letter, x.serialno
- comment: 复杂SQL-4
  oracle_sql: >
    select
      aa.*,
      (
        select
          min(createdate)
        from
          ReinsValidEnquiryRegister
        where
          aa.sequenceno = sequenceno
        group by
          sequenceno) createDate
    from
      (
        select
          to_date(to_char(a.closedate, 'yyyy-mm-dd'), 'yyyy-mm-dd') as closedate,
          Decode(c.riskunitcode                                                 ,
              '0'                                                               , '整单',
                c.riskunitcode) as riskUnitCode                                 ,
          c.layerNo                                                             ,
          decode(c.riskunitcode                                                 ,
              '0'                                                               , (
                select
                  sum(ss.sharerate) / count(distinct ss.riskunitcode)
                from
                  reinsshare ss
                where
                  ss.reinsmode in ('181',
                                  '182')
                and ss.validflag    = '1'
                and ss.drecertifyno = c.certifyNo),
                (
                  select
                    sum(ss.sharerate)
                  from
                    reinsshare ss
                  where
                    ss.reinsmode in ('181',
                                    '182')
                  and ss.validflag    = '1'
                  and ss.drecertifyno = c.certifyNo
                  and ss.riskunitcode = c.riskunitcode)) as retRate   ,
          100                                            as retAllRate,
          DECODE(c.sumfacshare                                        ,
              null                                                    , 0,
                c.sumfacshare)                                           as signedLineOwn                       ,
          to_date(to_char(c.facConfirmDate, 'yyyy-mm-dd'), 'yyyy-mm-dd') as facConfirmDate                      ,
          DECODE(l.locationflag                                                                                 ,
              'D'                                                                                               , '否',
                'F'                                                                                             , '是',
                  '')      as withHoldFlag                                                                           ,
          b.recertifyno    as recertifyNo                                                                            ,
          c.cutthroughflag as cutthroughflag                                                                         ,
          a.sequenceno     as SequenceNo                                                                             ,
          DECODE(c.signdate                                                                                          ,
              null                                                                                                   , '已录单',
                '归档完毕') as BusinessStatus                                                                            ,
          DECODE(a.isBranch                                                                                          ,
              '1'                                                                                                    , '是',
                '否')           as isBranch                                                                                     ,
          a.businessstatusdesc as BusinessStatusDesc                                                                           ,
          fd.categoryname      as ClassCode                                                                                    ,
          fd.riskCName         as riskName                                                                                     ,
          a.branchName                                                                                                         ,
          a.reportno           as ReportNo                                                                                               ,
          a.branchoperatorname as BranchOperatorName                                                                                     ,
          a.operatorname       as OperatorName                                                                                           ,
          a.itemname           as ItemName                                                                                               ,
          a.riskclassname      as RiskClassName                                                                                          ,
          a.faccodename        as FacCodeName                                                                                            ,
          DECODE(c.currency                                                                                                              ,
              null                                                                                                                       , '',
                c.currency) as Currency                                                                                                  ,
          DECODE(c.gbbaseshare                                                                                                           ,
              null                                                                                                                       , 0,
                c.gbbaseshare) as CoinsRate                                                                                              ,
          c.ReinsCode                                                                                                                    ,
          (
            select
              fdr.longname
            from
              fdreins fdr
            where
              fdr.reinscode = c.reinscode) as ReinsName,
          c.Freinscode                                 ,
          (
            select
              fdr.longname
            from
              fdreins fdr
            where
              fdr.reinscode = c.freinscode) as FreinsName  ,
          c.accreinscode                    as accreinscode,
          (
            select
              fdr.longname
            from
              fdreins fdr
            where
              fdr.reinscode = c.accreinscode) as accReinsName,
          c.brokerCode                                       ,
          (
            select
              fdr.longname
            from
              fdreins fdr
            where
              fdr.reinscode = c.brokerCode) as brokerName         ,
          c.DiffFlag                                              ,
          c.certifyno as CertifyNo                                ,
          DECODE(c.endorno                                        ,
              null                                                , 'P',
                'E') as certiType                                 ,
          a.CloseCodeName CloseCode                               ,
          null as EnquiryInputDate                                ,
          ''   as AccInputDate                                    ,
          ''   as AccPaymentCode                                  ,
          ''   as AccPaymentDate                                  ,
          ''   as TelNo                                           ,
          c.AccRemarks                                            ,
          c.FacSlipFlag                                           ,
          c.FacSlipDate                                           ,
          c.facType                                               ,
          DECODE(b.amount                                         ,
              null                                                , 0,
                b.amount) as Amount                               ,
          DECODE(b.premium                                        ,
              null                                                , 0,
                b.premium) as Premium                             ,
          DECODE(b.notaxpremium                                   ,
              null                                                , 0,
                b.notaxpremium) as notaxpremium                   ,
          DECODE(b.baseamount                                     ,
              null                                                , 0,
                b.baseamount) as BaseAmount                       ,
          DECODE(b.basepremium                                    ,
              null                                                , 0,
                b.basepremium) as BasePremium                     ,
          DECODE(b.notaxbasepremium                               ,
              null                                                , 0,
                b.notaxbasepremium) as notaxbasepremium           ,
          DECODE(c.sumfacshare                                    ,
              null                                                , 0,
                c.sumfacshare) as OutSignedLine                   ,
          DECODE(c.outAmount                                      ,
              null                                                , 0,
                c.outAmount) as outAmount                         ,
          DECODE(c.outPremium                                     ,
              null                                                , 0,
                c.outPremium) as outPremium                       ,
          DECODE(c.noTaxoutPremium                                ,
              null                                                , 0,
                c.noTaxoutPremium) as noTaxoutPremium             ,
          d.amount                 as RetenAmount                 ,
          d.premium                as RetenPremium                ,
          a.claimcondition         as ClaimCondition              ,
          DECODE(a.offeredLine                                    ,
              null                                                , 0,
                a.offeredLine) as OfferedLine                     ,
          DECODE(c.sumfacshare * c.gbbaseshare / 100              ,
              null                                                , 0,
                c.sumfacshare * c.gbbaseshare / 100) as SignedLine,
          c.SpecialFacFlag                                        ,
          DECODE(c.WrittenLine                                    ,
              null                                                , 0,
                c.WrittenLine) as WrittenLine                     ,
          DECODE(c.BaseShare                                      ,
              null                                                , 0,
                c.BaseShare) as BaseShare                         ,
          DECODE(c.CommRate                                       ,
              null                                                , 0,
                c.CommRate)                  as CommRate                           ,
          0                                  as OutSumPremium                      ,
          0                                  as Commission                         ,
          0                                  as TaxFee                             ,
          0                                  as AddTaxFee                          ,
          0                                  as OtherFee                           ,
          0                                  as Balance                            ,
          to_char(c.startdate, 'yyyy-mm-dd') as StartDate                          ,
          to_char(c.enddate, 'yyyy-mm-dd')   as EndDate                            ,
          ''                                 as ExecutiveRemark                    ,
          a.remarks                          as Remarks                            ,
          c.FacilityCode                     as FacilityCode                       ,
          a.firstdate                        as FirstDate                          ,
          a.noTaskReason                     as noTaskReason                       ,
          a.takeDate                         as takeDate                           ,
          a.afterDate                        as AfterDate                          ,
          a.taskEndDate                      as taskEndDate                        ,
          c.verifyDate                       as verifyDate                         ,
          c.underWriteEndDate                as underWriteEndDate
        from
          (
            select
              drcertifyno       ,
              riskunitcode      ,
              sum(amount) amount,
              sum(premium) premium
            from
              reinsretenshare
            group by
              drcertifyno,
              riskunitcode

            union all

            select
              drcertifyno       ,
              '0'               ,
              sum(amount) amount,
              sum(premium) premium
            from
              reinsretenshare
            group by
              drcertifyno) d           ,
          ReinsValidEnquiryRegister a  ,
          Reinsenquiryregisterbinding b,
          (
            select
              r.sequenceno          ,
              r.ClassCode           ,
              r.riskcode            ,
              r.comcode             ,
              e.signdate            ,
              null         as layerNo       ,
              r.verifydate as facConfirmDate,
              e.enquiryno                   ,
              e.endorno                     ,
              r.sumamount       as sumamount      ,
              r.sumpremium      as sumpremium     ,
              r.baseshare       as gbbaseshare    ,
              r.specialfacshare as specialfacshare,
              r.facshare        as facshare       ,
              r.sumfacshare     as sumfacshare    ,
              decode(r.enquirytype                ,
                  'P'                             , r.policyno,
                    'E'                           , r.endorno) as certifyno,
              r.riskunitcode riskunitcode         ,
              r.currency       as currency              ,
              e.reinscode      as reinscode             ,
              e.accreinscode   as accreinscode          ,
              e.accReinsName   as accReinsName          ,
              e.reinsname      as ReinsName             ,
              e.finalreinscode as Freinscode            ,
              e.finalreinsname as FreinsName            ,
              e.brokercode     as brokercode            ,
              e.brokerName     as brokerName            ,
              e.DiffFlag       as DiffFlag              ,
              ''               as AccRemarks            ,
              DECODE(e.signDate                         ,
                  null                                  , '否',
                    '是')                     as FacSlipFlag                 ,
              to_char(e.signDate, 'yyyy-mm') as FacSlipDate                 ,
              decode(r.enquirytype                                          ,
                  'P'                                                       , e.amount,
                    'E'                                                     , e.chgamount,
                      0) as outAmount                                       ,
              decode(r.enquirytype                                          ,
                  'P'                                                       , e.premium,
                    'E'                                                     , e.chgpremium,
                      0) as outPremium                                      ,
              decode(r.enquirytype                                          ,
                  'P'                                                       , e.notaxpremium,
                    'E'                                                     , e.chgnotaxpremium,
                      0) as notaxOutPremium                                 ,
              e.vatfee   as taxfee                                          ,
              DECODE(e.facflag                                              ,
                  '1'                                                       , '是',
                    '否')                                         as SpecialFacFlag                                  ,
              (nvl(e.signedline, 0) * nvl(r.BaseShare, 0)) / 100 as WrittenLine                                     ,
              nvl(e.signedline, 0)                               as BaseShare                                       ,
              e.signedcomm                                       as CommRate                                        ,
              e.premium * e.signedcomm / 100                     as Commission                                      ,
              ''                                                 as FacilityCode                                    ,
              '比例临分' facType                                                                                        ,
              r.startdate                                                                                           ,
              r.enddate                                                                                             ,
              e.cutthroughflag as cutthroughflag                                                                    ,
              decode(r.verifyFlag                                                                                   ,
                  3                                                                                                 , verifyDate,
                    null) verifyDate                                                                                ,
              decode(r.enquiryType                                                                                  ,
                  'P'                                                                                               , pUnit.underWriteEndDate,
                    'E'                                                                                             , eUnit.underWriteEndDate,
                      null) underWriteEndDate                                                                       ,
              (
                select
                  (
                    case
                    when
                      count(1) = 0
                    then
                      SYSDATE
                    else
                      max(writtenDate)
                    end) writtenDate
                from
                  fzacc acc
                where
                  (
                    (
                      r.policyNo        = acc.drcertifyNo
                      and r.enquiryType = 'P')
                    or (
                      r.endorNo         = acc.drcertifyNo
                      and r.enquiryType = 'E'))
                and e.accReinsCode      = acc.accReinsCode
                and e.withHoldFlag      = acc.withHoldFlag) writtenDate
            from
              ReinsValidReceive e,
              ReinsValidEnquiry r
            left join
              ReinsPolicyUnit pUnit
            on
              r.policyNo = pUnit.policyNo
            left join
              ReinsEndorUnit eUnit
            on
              r.endorNo = eUnit.endorNo
            where
              r.enquiryno     = e.enquiryno
            and r.versionno   = e.versionno
            and e.versiondesc <> ' '
            and r.sequenceNo  <> ' '
            and r.enquirytype in ('P',
                                 'E')
            and r.validflag = '1'

            union all

            select
              r.sequenceno               ,
              r.ClassCode                ,
              r.riskcode                 ,
              r.comcode                  ,
              f.signdate                 ,
              f.layerno    as layerNo       ,
              r.verifydate as facConfirmDate,
              f.enquiryno                   ,
              r.endorno                     ,
              r.sumamount       as sumamount      ,
              r.sumpremium      as sumpremium     ,
              r.baseshare       as gbbaseshare    ,
              r.specialfacshare as specialfacshare,
              r.facshare        as facshare       ,
              0                 as sumfacshare    ,
              decode(r.enquirytype                ,
                  'P'                             , r.policyno,
                    'E'                           , r.endorno) as certifyno,
              r.riskunitcode riskunitcode         ,
              r.currency     as currency              ,
              f.reinscode    as Reinscode             ,
              f.accreinscode as accreinscode          ,
              f.accReinsName as accReinsName          ,
              f.reinsname    as ReinsName             ,
              f.freinscode   as Freinscode            ,
              f.freinsname   as FreinsName            ,
              f.brokercode   as brokercode            ,
              f.brokerName   as brokerName            ,
              DECODE(f.DiffFlag                       ,
                  '1'                                 , '费率差异',
                    '无差异') as DiffFlag                ,
              ''           as AccRemarks              ,
              '' FacSlipFlag                          ,
              '' as FacSlipDate                       ,
              0  as outAmount                         ,
              decode(r.enquirytype                    ,
                  'P'                                 , f.premium,
                    'E'                               , f.chgpreium,
                      0) as outPremium                ,
              decode(r.enquirytype                    ,
                  'P'                                 , f.notaxpremium,
                    'E'                               , f.CHGEXTAXPREMIUM,
                      0) as notaxoutPremium           ,
              f.vat      as taxfee                    ,
              DECODE(f.facflag                        ,
                  '1'                                 , '是',
                    '否')          as SpecialFacFlag            ,
              nvl(f.sharerate, 0) as WrittenLine               ,
              nvl(f.sharerate, 0) as BaseShare                 ,
              DECODE(f.COMMISSIONSRATE                         ,
                  null                                         , 0,
                    f.COMMISSIONSRATE)      as CommRate             ,
              f.premium * f.commissionsrate as Commission           ,
              ''                            as FacilityCode         ,
              '非比例临分' facType                                       ,
              r.startdate                                           ,
              r.enddate                                             ,
              '0' as cutthroughflag                                 ,
              decode(r.verifyFlag                                   ,
                  3                                                 , verifyDate,
                    null) verifyDate                                ,
              decode(r.enquiryType                                  ,
                  'P'                                               , pUnit.underWriteEndDate,
                    'E'                                             , eUnit.underWriteEndDate,
                      null) underWriteEndDate                       ,
              (
                select
                  (
                    case
                    when
                      count(1) = 0
                    then
                      SYSDATE
                    else
                      max(writtenDate)
                    end) writtenDate
                from
                  fzacc acc
                where
                  (
                    (
                      r.policyNo        = acc.drcertifyNo
                      and r.enquiryType = 'P')
                    or (
                      r.endorNo         = acc.drcertifyNo
                      and r.enquiryType = 'E'))
                and f.accReinsCode      = acc.accReinsCode
                and f.withHoldFlag      = acc.withHoldFlag
                and f.layerno           = acc.sectionNo) writtenDate
            from
              REINSVALIDXOLRECEIVE f,
              ReinsValidEnquiry r
            left join
              ReinsPolicyUnit pUnit
            on
              r.policyNo = pUnit.policyNo
            left join
              ReinsEndorUnit eUnit
            on
              r.endorNo = eUnit.endorNo
            where
              r.enquiryno     = f.enquiryno
            and r.versionno   = f.versionno
            and f.versiondesc <> ' '
            and r.sequenceNo  <> ' '
            and r.enquirytype in ('P',
                                 'E')
            and r.validflag = '1') c,
          fdCompany company         ,
          fdrisk fd                 ,
          fdReins l
        where
          c.certifyno       = b.certifyno
        and fd.riskcode(   +)  = c.riskcode
        and d.DRCERTIFYNO( +)  = c.certifyno
        and d.RISKUNITCODE(+)  = c.riskunitcode
        and fd.validStatus     = '1'
        and company.comcode(+) = a.branchcode
        and l.reinscode        = c.freinscode
        and c.riskunitcode     = b.riskunitcode
        and a.validflag        = '1'
        and a.sequenceNo       = b.sequenceNo
        and a.versionNo        = b.versionNo
        and a.sequenceNo       = c.sequenceNo
        and a.branchcode in
          (
            select
              comCode
            from
              FDCOMPANY
            where
              comPath like '%11000000%')

        union all

        select
          a.closedate as closedate                     ,
          ''          as riskUnitCode                  ,
          c.layerNo                                    ,
          decode(c.facType                             ,
              '比例临分'                                   , a.retenShare / a.coinsRate * 100,
                0)             as retRate                          ,
          nvl(a.retenShare, 0) as retAllRate                       ,
          decode(a.signedLine                                      ,
              null                                                 , 0,
                a.signedLine / a.coinsRate * 100) as signedLineOwn ,
          null                                    as facConfirmDate,
          DECODE(
            (
              select distinct
                l.locationflag
              from
                fdReins l
              where
                l.reinscode = c.freinscode),
              'D'                          , '否',
                'F'                        , '是',
                  '')          as withHoldFlag      ,
          ''                   as recertifyNo       ,
          ''                   as cutthroughflag    ,
          a.sequenceno         as SequenceNo        ,
          a.businessstatusName as BusinessStatus    ,
          DECODE(a.isBranch                         ,
              '1'                                   , '是',
                '否')           as isBranch                    ,
          a.businessstatusdesc as BusinessStatusDesc          ,
          a.classname          as classCode                   ,
          null riskName                                       ,
          a.branchname         as branchName                          ,
          a.reportno           as ReportNo                            ,
          a.branchoperatorname as BranchOperatorName                  ,
          a.operatorname       as OperatorName                        ,
          a.itemname           as ItemName                            ,
          a.riskclassname      as RiskClassName                       ,
          a.faccodename        as FacCodeName                         ,
          DECODE(a.currency                                           ,
              null                                                    , '',
                a.currency) as Currency                               ,
          DECODE(a.coinsrate                                          ,
              null                                                    , 0,
                a.coinsrate) as CoinsRate                             ,
          c.ReinsCode                                                 ,
          c.ReinsName                                                 ,
          c.Freinscode                                                ,
          c.FreinsName                                                ,
          c.accreinscode as accreinscode                              ,
          c.accReinsName                                              ,
          c.brokerCode                                                ,
          c.brokerName                                                ,
          c.DiffFlag                                                  ,
          ''              as CertifyNo                                             ,
          ''              as certiType                                             ,
          a.CloseCodeName as CloseCode                                             ,
          null            as EnquiryInputDate                                      ,
          ''              as AccInputDate                                          ,
          ''              as AccPaymentCode                                        ,
          ''              as AccPaymentDate                                        ,
          c.telno         as telNo                                                 ,
          c.AccRemarks                                                             ,
          c.FacSlipFlag                                                            ,
          c.FacSlipDate                                                            ,
          c.facType                                                                ,
          DECODE(a.amount                                                          ,
              null                                                                 , 0,
                a.amount) as Amount                                                ,
          DECODE(a.premium                                                         ,
              null                                                                 , 0,
                a.premium) as Premium                                              ,
          DECODE(a.notaxpremium                                                    ,
              null                                                                 , 0,
                a.notaxpremium) as notaxpremium                                    ,
          DECODE(a.baseamount                                                      ,
              null                                                                 , 0,
                a.baseamount) as BaseAmount                                        ,
          DECODE(a.basepremium                                                     ,
              null                                                                 , 0,
                a.basepremium) as BasePremium                                      ,
          DECODE(a.notaxbasepremium                                                ,
              null                                                                 , 0,
                a.notaxbasepremium) as notaxbasepremium                            ,
          DECODE(c.OutSignedLine                                                   ,
              null                                                                 , 0,
                c.OutSignedLine) as OutSignedLine                                  ,
          DECODE(c.outAmount                                                       ,
              null                                                                 , 0,
                c.outAmount) as outAmount                                          ,
          DECODE(c.outPremium                                                      ,
              null                                                                 , 0,
                c.outPremium) as outPremium                                        ,
          DECODE(c.noTaxoutPremium                                                 ,
              null                                                                 , 0,
                c.noTaxoutPremium) as noTaxoutPremium                              ,
          DECODE(a.retenamount                                                     ,
              null                                                                 , 0,
                a.retenamount) as RetenAmount                                      ,
          DECODE(a.retenpremium                                                    ,
              null                                                                 , 0,
                a.retenpremium) as RetenPremium                                    ,
          a.claimcondition      as ClaimCondition                                  ,
          DECODE(a.offeredline                                                     ,
              null                                                                 , 0,
                a.offeredline) as OfferedLine                                      ,
          DECODE(c.SignedLine                                                      ,
              null                                                                 , 0,
                c.SignedLine) as SignedLine                                        ,
          c.SpecialFacFlag                                                         ,
          DECODE(c.WrittenLine                                                     ,
              null                                                                 , 0,
                c.WrittenLine) as WrittenLine                                      ,
          DECODE(c.BaseShare                                                       ,
              null                                                                 , 0,
                c.BaseShare) as BaseShare                                          ,
          DECODE(c.CommRate                                                        ,
              null                                                                 , 0,
                c.CommRate) as CommRate                                            ,
          DECODE(c.noTaxoutPremium                                                 ,
              null                                                                 , 0,
                c.noTaxoutPremium) as OutSumPremium                                ,
          DECODE(c.Commission                                                      ,
              null                                                                 , 0,
                c.Commission)                as Commission                                        ,
          0                                  as TaxFee                                            ,
          0                                  as AddTaxFee                                         ,
          0                                  as OtherFee                                          ,
          0                                  as Balance                                           ,
          to_char(a.startdate, 'yyyy-mm-dd') as StartDate                                         ,
          to_char(a.enddate, 'yyyy-mm-dd')   as EndDate                                           ,
          ''                                 as ExecutiveRemark                                   ,
          a.remarks                          as Remarks                                           ,
          c.FacilityCode                     as FacilityCode                                      ,
          a.firstdate                        as FirstDate                                         ,
          a.noTaskReason                     as noTaskReason                                      ,
          a.takeDate                         as takeDate                                          ,
          null                               as AfterDate                                         ,
          a.taskEndDate                      as taskEndDate                                       ,
          null                               as verifyDate                                        ,
          null                               as underWriteEndDate
        from
          ReinsValidEnquiryRegister a
        left join
          (
            select
              null as layerNo                ,
              r.telno                        ,
              e.sequenceno                   ,
              r.reinscode  as reinscode       ,
              r.reinsname  as ReinsName       ,
              r.freinscode as Freinscode      ,
              r.freinsname as FreinsName      ,
              r.accreinscode accreinscode     ,
              r.accReinsName                  ,
              r.brokerCode                    ,
              r.brokerName                    ,
              r.DiffFlag   as DiffFlag          ,
              r.accremarks as AccRemarks        ,
              DECODE(r.facslipflag              ,
                  1                             , '是',
                    '否')                        as FacSlipFlag         ,
              to_char(r.facslipdate, 'yyyy-mm') as FacSlipDate         ,
              r.amount                          as outAmount           ,
              r.premium                         as outPremium          ,
              r.notaxpremium                    as notaxoutPremium     ,
              DECODE(r.specialfacflag                                  ,
                  '1'                                                  , '是',
                    '否')          as SpecialFacFlag                             ,
              r.WRITTENLINE       as WrittenLine                                ,
              nvl(r.BaseShare, 0) as BaseShare                                  ,
              DECODE(r.commrate                                                 ,
                  null                                                          , 0,
                    r.commrate) as CommRate                                     ,
              DECODE(r.commRate                                                 ,
                  null                                                          , 0,
                    r.commRate) * DECODE(r.premium                              ,
                  null                                                          , 0,
                    r.premium) / 100 as Commission                              ,
              DECODE(e.signedline                                               ,
                  null                                                          , 0,
                    e.signedline) as SignedLine                                 ,
              DECODE(round(e.signedline / e.coinsrate / 100, 6)                 ,
                  null                                                          , 0,
                    round(e.signedline / e.coinsrate / 100, 6)) as OutSignedLine,
              r.facilitycode facility                                           ,
              '' as FacilityCode                                                ,
              '比例临分' facType
            from
              reinsvalidenquiryregister e,
              reinsvalidenquiryregisterreins r
            where
              r.sequenceno  = e.sequenceno
            and r.versionNo = e.versionNo
            and e.validflag = '1'

            union all

            select
              f.layerNo as layerNo        ,
              f.telno                     ,
              r.sequenceno                ,
              f.reinscode  as Reinscode    ,
              f.reinsname  as ReinsName    ,
              f.freinscode as Freinscode   ,
              f.freinsname as FreinsName   ,
              f.accreinscode accreinscode  ,
              f.accReinsName               ,
              f.brokerCode                 ,
              f.brokerName                 ,
              DECODE(f.diffflag            ,
                  '1'                      , '费率差异',
                    '无差异') as DiffFlag     ,
              f.accremarks as AccRemarks   ,
              DECODE(f.facslipflag         ,
                  1                        , '是',
                    '否')                        as FacSlipFlag    ,
              to_char(f.facslipdate, 'yyyy-mm') as FacSlipDate    ,
              0                                 as outAmount      ,
              f.repremium                       as outPremium     ,
              f.noTaxrepremium                  as noTaxoutPremium,
              DECODE(f.specialfacflag                             ,
                  '1'                                             , '是',
                    '否')           as SpecialFacFlag                        ,
              nvl(f.signedline, 0) as WrittenLine                           ,
              0                    as BaseShare                             ,
              DECODE(f.commrate                                             ,
                  null                                                      , 0,
                    f.commrate) as CommRate                                 ,
              DECODE(f.commrate                                             ,
                  null                                                      , 0,
                    f.commrate) * DECODE(f.repremium                        ,
                  null                                                      , 0,
                    f.repremium) / 100 as Commission                        ,
              0                        as SignedLine                        ,
              0                        as OutSignedLine                     ,
              f.facilitycode facility                                       ,
              '' as FacilityCode                                            ,
              '非比例临分' facType
            from
              reinsvalidenquiryregisterxreins f,
              reinsvalidenquiryregister r
            where
              r.sequenceno  = f.sequenceno
            and r.versionNo = f.versionNo
            and r.validflag = '1') c
        on
          a.sequenceno = c.sequenceno
        where
          a.validflag = '1'
        and not exists
          (
            select
              1
            from
              reinsenquiryregisterbinding f
            where
              a.sequenceno = f.sequenceno)
        and a.branchcode in
          (
            select
              comCode
            from
              FDCOMPANY
            where
              comPath like '%11000000%')) aa
    where
      1 = 1
    order by
      aa.sequenceno asc,
      aa.layerno asc
  tidb_sql: >
    select aa.* , ( select min(createdate) from reinsvalidenquiryregister where aa.sequenceno = sequenceno group by sequenceno ) as createdate from ( select str_to_date(date_format(a.closedate, '%y-%m-%d'), '%y-%m-%d') as closedate , case c.riskunitcode when '0' then '整单' else c.riskunitcode end as riskunitcode , c.layerno , case c.riskunitcode when '0' then ( select sum(ss.sharerate) / count(distinct ss.riskunitcode) from reinsshare ss where ss.reinsmode in ('181', '182') and ss.validflag = '1' and ss.drecertifyno = c.certifyno ) else ( select sum(ss.sharerate) from reinsshare ss where ss.reinsmode in ('181', '182') and ss.validflag = '1' and ss.drecertifyno = c.certifyno and ss.riskunitcode = c.riskunitcode ) end as retrate , 100 as retallrate , case c.sumfacshare when null then 0 else c.sumfacshare end as signedlineown , str_to_date(date_format(c.facconfirmdate, '%y-%m-%d'), '%y-%m-%d') as facconfirmdate , case l.locationflag when 'd' then '否' when 'f' then '是' else '' end as withholdflag , b.recertifyno as recertifyno, c.cutthroughflag as cutthroughflag, a.sequenceno as sequenceno , case c.signdate when null then '已录单' else '归档完毕' end as businessstatus , case a.isbranch when '1' then '是' else '否' end as isbranch , a.businessstatusdesc as businessstatusdesc, fd.categoryname as classcode, fd.riskcname as riskname, a.branchname, a.reportno as reportno , a.branchoperatorname as branchoperatorname, a.operatorname as operatorname, a.itemname as itemname, a.riskclassname as riskclassname, a.faccodename as faccodename , case c.currency when null then '' else c.currency end as currency , case c.gbbaseshare when null then 0 else c.gbbaseshare end as coinsrate , c.reinscode , ( select fdr.longname from fdreins fdr where fdr.reinscode = c.reinscode ) as reinsname, c.freinscode , ( select fdr.longname from fdreins fdr where fdr.reinscode = c.freinscode ) as freinsname, c.accreinscode as accreinscode , ( select fdr.longname from fdreins fdr where fdr.reinscode = c.accreinscode ) as accreinsname, c.brokercode , ( select fdr.longname from fdreins fdr where fdr.reinscode = c.brokercode ) as brokername, c.diffflag, c.certifyno as certifyno , case c.endorno when null then 'p' else 'e' end as certitype , a.closecodename as closecode, null as enquiryinputdate, '' as accinputdate, '' as accpaymentcode, '' as accpaymentdate , '' as telno, c.accremarks, c.facslipflag, c.facslipdate, c.factype , case b.amount when null then 0 else b.amount end as amount , case b.premium when null then 0 else b.premium end as premium , case b.notaxpremium when null then 0 else b.notaxpremium end as notaxpremium , case b.baseamount when null then 0 else b.baseamount end as baseamount , case b.basepremium when null then 0 else b.basepremium end as basepremium , case b.notaxbasepremium when null then 0 else b.notaxbasepremium end as notaxbasepremium , case c.sumfacshare when null then 0 else c.sumfacshare end as outsignedline , case c.outamount when null then 0 else c.outamount end as outamount , case c.outpremium when null then 0 else c.outpremium end as outpremium , case c.notaxoutpremium when null then 0 else c.notaxoutpremium end as notaxoutpremium , d.amount as retenamount, d.premium as retenpremium, a.claimcondition as claimcondition , case a.offeredline when null then 0 else a.offeredline end as offeredline , case c.sumfacshare * c.gbbaseshare / 100 when null then 0 else c.sumfacshare * c.gbbaseshare / 100 end as signedline , c.specialfacflag , case c.writtenline when null then 0 else c.writtenline end as writtenline , case c.baseshare when null then 0 else c.baseshare end as baseshare , case c.commrate when null then 0 else c.commrate end as commrate , 0 as outsumpremium, 0 as commission, 0 as taxfee, 0 as addtaxfee, 0 as otherfee , 0 as balance, date_format(c.startdate, '%y-%m-%d') as startdate , date_format(c.enddate, '%y-%m-%d') as enddate, '' as executiveremark , a.remarks as remarks, c.facilitycode as facilitycode, a.firstdate as firstdate, a.notaskreason as notaskreason, a.takedate as takedate , a.afterdate as afterdate, a.taskenddate as taskenddate, c.verifydate as verifydate, c.underwriteenddate as underwriteenddate from reinsvalidenquiryregister a join reinsenquiryregisterbinding b on a.sequenceno = b.sequenceno and a.versionno = b.versionno join ( select r.sequenceno, r.classcode, r.riskcode, r.comcode, e.signdate , null as layerno, r.verifydate as facconfirmdate, e.enquiryno, e.endorno, r.sumamount as sumamount , r.sumpremium as sumpremium, r.baseshare as gbbaseshare, r.specialfacshare as specialfacshare, r.facshare as facshare, r.sumfacshare as sumfacshare , case r.enquirytype when 'p' then r.policyno when 'e' then r.endorno else null end as certifyno , r.riskunitcode as riskunitcode, r.currency as currency, e.reinscode as reinscode, e.accreinscode as accreinscode, e.accreinsname as accreinsname , e.reinsname as reinsname, e.finalreinscode as freinscode, e.finalreinsname as freinsname, e.brokercode as brokercode, e.brokername as brokername , e.diffflag as diffflag, '' as accremarks , case e.signdate when null then '否' else '是' end as facslipflag , date_format(e.signdate, '%y-%m') as facslipdate , case r.enquirytype when 'p' then e.amount when 'e' then e.chgamount else 0 end as outamount , case r.enquirytype when 'p' then e.premium when 'e' then e.chgpremium else 0 end as outpremium , case r.enquirytype when 'p' then e.notaxpremium when 'e' then e.chgnotaxpremium else 0 end as notaxoutpremium , e.vatfee as taxfee , case e.facflag when '1' then '是' else '否' end as specialfacflag , ifnull(e.signedline, 0) * ifnull(r.baseshare, 0) / 100 as writtenline , ifnull(e.signedline, 0) as baseshare, e.signedcomm as commrate , e.premium * e.signedcomm / 100 as commission, '' as facilitycode , '比例临分' as factype, r.startdate, r.enddate, e.cutthroughflag as cutthroughflag , case r.verifyflag when 3 then verifydate else null end as verifydate , case r.enquirytype when 'p' then punit.underwriteenddate when 'e' then eunit.underwriteenddate else null end as underwriteenddate , ( select case when count(1) = 0 then now() else max(writtendate) end as writtendate from fzacc acc where ((r.policyno = acc.drcertifyno and r.enquirytype = 'p') or (r.endorno = acc.drcertifyno and r.enquirytype = 'e')) and e.accreinscode = acc.accreinscode and e.withholdflag = acc.withholdflag ) as writtendate from reinsvalidreceive e join reinsvalidenquiry r on r.enquiryno = e.enquiryno and r.versionno = e.versionno left join reinsendorunit eunit on r.endorno = eunit.endorno left join reinspolicyunit punit on r.policyno = punit.policyno where e.versiondesc <> ' ' and r.sequenceno <> ' ' and r.validflag = '1' and r.enquirytype in ('p', 'e') union all select r.sequenceno, r.classcode, r.riskcode, r.comcode, f.signdate , f.layerno as layerno, r.verifydate as facconfirmdate, f.enquiryno, r.endorno, r.sumamount as sumamount , r.sumpremium as sumpremium, r.baseshare as gbbaseshare, r.specialfacshare as specialfacshare, r.facshare as facshare, 0 as sumfacshare , case r.enquirytype when 'p' then r.policyno when 'e' then r.endorno else null end as certifyno , r.riskunitcode as riskunitcode, r.currency as currency, f.reinscode as reinscode, f.accreinscode as accreinscode, f.accreinsname as accreinsname , f.reinsname as reinsname, f.freinscode as freinscode, f.freinsname as freinsname, f.brokercode as brokercode, f.brokername as brokername , case f.diffflag when '1' then '费率差异' else '无差异' end as diffflag , '' as accremarks, '' as facslipflag, '' as facslipdate, 0 as outamount , case r.enquirytype when 'p' then f.premium when 'e' then f.chgpreium else 0 end as outpremium , case r.enquirytype when 'p' then f.notaxpremium when 'e' then f.chgextaxpremium else 0 end as notaxoutpremium , f.vat as taxfee , case f.facflag when '1' then '是' else '否' end as specialfacflag , ifnull(f.sharerate, 0) as writtenline , ifnull(f.sharerate, 0) as baseshare , case f.commissionsrate when null then 0 else f.commissionsrate end as commrate , f.premium * f.commissionsrate as commission, '' as facilitycode, '非比例临分' as factype , r.startdate, r.enddate, '0' as cutthroughflag , case r.verifyflag when 3 then verifydate else null end as verifydate , case r.enquirytype when 'p' then punit.underwriteenddate when 'e' then eunit.underwriteenddate else null end as underwriteenddate , ( select case when count(1) = 0 then now() else max(writtendate) end as writtendate from fzacc acc where ((r.policyno = acc.drcertifyno and r.enquirytype = 'p') or (r.endorno = acc.drcertifyno and r.enquirytype = 'e')) and f.accreinscode = acc.accreinscode and f.withholdflag = acc.withholdflag and f.layerno = acc.sectionno ) as writtendate from reinsvalidxolreceive f join reinsvalidenquiry r on r.enquiryno = f.enquiryno and r.versionno = f.versionno left join reinsendorunit eunit on r.endorno = eunit.endorno left join reinspolicyunit punit on r.policyno = punit.policyno where f.versiondesc <> ' ' and r.sequenceno <> ' ' and r.validflag = '1' and r.enquirytype in ('p', 'e') ) c on a.sequenceno = c.sequenceno and c.certifyno = b.certifyno and c.riskunitcode = b.riskunitcode join fdreins l on l.reinscode = c.freinscode left join fdcompany company on a.branchcode = company.comcode left join ( select drcertifyno, riskunitcode, sum(amount) as amount , sum(premium) as premium from reinsretenshare group by drcertifyno, riskunitcode union all select drcertifyno, '0', sum(amount) as amount , sum(premium) as premium from reinsretenshare group by drcertifyno ) d on c.certifyno = d.drcertifyno and c.riskunitcode = d.riskunitcode left join fdrisk fd on c.riskcode = fd.riskcode where fd.validstatus = '1' and a.validflag = '1' and a.branchcode in ( select comcode from fdcompany where compath like '%11000000%' ) union all select a.closedate as closedate, '' as riskunitcode, c.layerno , case c.factype when '比例临分' then a.retenshare / a.coinsrate * 100 else 0 end as retrate , ifnull(a.retenshare, 0) as retallrate , case a.signedline when null then 0 else a.signedline / a.coinsrate * 100 end as signedlineown , null as facconfirmdate , case ( select distinct l.locationflag from fdreins l where l.reinscode = c.freinscode ) when 'd' then '否' when 'f' then '是' else '' end as withholdflag , '' as recertifyno, '' as cutthroughflag, a.sequenceno as sequenceno, a.businessstatusname as businessstatus , case a.isbranch when '1' then '是' else '否' end as isbranch , a.businessstatusdesc as businessstatusdesc, a.classname as classcode, null as riskname, a.branchname as branchname, a.reportno as reportno , a.branchoperatorname as branchoperatorname, a.operatorname as operatorname, a.itemname as itemname, a.riskclassname as riskclassname, a.faccodename as faccodename , case a.currency when null then '' else a.currency end as currency , case a.coinsrate when null then 0 else a.coinsrate end as coinsrate , c.reinscode, c.reinsname, c.freinscode, c.freinsname, c.accreinscode as accreinscode , c.accreinsname, c.brokercode, c.brokername, c.diffflag, '' as certifyno , '' as certitype, a.closecodename as closecode, null as enquiryinputdate, '' as accinputdate, '' as accpaymentcode , '' as accpaymentdate, c.telno as telno, c.accremarks, c.facslipflag, c.facslipdate , c.factype , case a.amount when null then 0 else a.amount end as amount , case a.premium when null then 0 else a.premium end as premium , case a.notaxpremium when null then 0 else a.notaxpremium end as notaxpremium , case a.baseamount when null then 0 else a.baseamount end as baseamount , case a.basepremium when null then 0 else a.basepremium end as basepremium , case a.notaxbasepremium when null then 0 else a.notaxbasepremium end as notaxbasepremium , case c.outsignedline when null then 0 else c.outsignedline end as outsignedline , case c.outamount when null then 0 else c.outamount end as outamount , case c.outpremium when null then 0 else c.outpremium end as outpremium , case c.notaxoutpremium when null then 0 else c.notaxoutpremium end as notaxoutpremium , case a.retenamount when null then 0 else a.retenamount end as retenamount , case a.retenpremium when null then 0 else a.retenpremium end as retenpremium , a.claimcondition as claimcondition , case a.offeredline when null then 0 else a.offeredline end as offeredline , case c.signedline when null then 0 else c.signedline end as signedline , c.specialfacflag , case c.writtenline when null then 0 else c.writtenline end as writtenline , case c.baseshare when null then 0 else c.baseshare end as baseshare , case c.commrate when null then 0 else c.commrate end as commrate , case c.notaxoutpremium when null then 0 else c.notaxoutpremium end as outsumpremium , case c.commission when null then 0 else c.commission end as commission , 0 as taxfee, 0 as addtaxfee, 0 as otherfee, 0 as balance , date_format(a.startdate, '%y-%m-%d') as startdate , date_format(a.enddate, '%y-%m-%d') as enddate, '' as executiveremark , a.remarks as remarks, c.facilitycode as facilitycode, a.firstdate as firstdate, a.notaskreason as notaskreason, a.takedate as takedate , null as afterdate, a.taskenddate as taskenddate, null as verifydate, null as underwriteenddate from reinsvalidenquiryregister a left join ( select null as layerno, r.telno, e.sequenceno, r.reinscode as reinscode, r.reinsname as reinsname , r.freinscode as freinscode, r.freinsname as freinsname, r.accreinscode as accreinscode, r.accreinsname, r.brokercode , r.brokername, r.diffflag as diffflag, r.accremarks as accremarks , case r.facslipflag when 1 then '是' else '否' end as facslipflag , date_format(r.facslipdate, '%y-%m') as facslipdate, r.amount as outamount , r.premium as outpremium, r.notaxpremium as notaxoutpremium , case r.specialfacflag when '1' then '是' else '否' end as specialfacflag , r.writtenline as writtenline, ifnull(r.baseshare, 0) as baseshare , case r.commrate when null then 0 else r.commrate end as commrate , case r.commrate when null then 0 else r.commrate end * case r.premium when null then 0 else r.premium end / 100 as commission , case e.signedline when null then 0 else e.signedline end as signedline , case round(e.signedline / e.coinsrate / 100, 6) when null then 0 else round(e.signedline / e.coinsrate / 100, 6) end as outsignedline , r.facilitycode as facility, '' as facilitycode, '比例临分' as factype from reinsvalidenquiryregister e join reinsvalidenquiryregisterreins r on r.sequenceno = e.sequenceno and r.versionno = e.versionno where e.validflag = '1' union all select f.layerno as layerno, f.telno, r.sequenceno, f.reinscode as reinscode, f.reinsname as reinsname , f.freinscode as freinscode, f.freinsname as freinsname, f.accreinscode as accreinscode, f.accreinsname, f.brokercode , f.brokername , case f.diffflag when '1' then '费率差异' else '无差异' end as diffflag , f.accremarks as accremarks , case f.facslipflag when 1 then '是' else '否' end as facslipflag , date_format(f.facslipdate, '%y-%m') as facslipdate, 0 as outamount , f.repremium as outpremium, f.notaxrepremium as notaxoutpremium , case f.specialfacflag when '1' then '是' else '否' end as specialfacflag , ifnull(f.signedline, 0) as writtenline, 0 as baseshare , case f.commrate when null then 0 else f.commrate end as commrate , case f.commrate when null then 0 else f.commrate end * case f.repremium when null then 0 else f.repremium end / 100 as commission , 0 as signedline, 0 as outsignedline, f.facilitycode as facility, '' as facilitycode, '非比例临分' as factype from reinsvalidenquiryregisterxreins f join reinsvalidenquiryregister r on r.sequenceno = f.sequenceno and r.versionno = f.versionno where r.validflag = '1' ) c on a.sequenceno = c.sequenceno where a.validflag = '1' and a.branchcode in ( select comcode from fdcompany where compath like '%11000000%' ) and not exists ( select 1 from reinsenquiryregisterbinding f where a.sequenceno = f.sequenceno ) ) aa where 1 = 1 order by aa.sequenceno asc, aa.layerno asc
- comment: 复杂SQL-5
  oracle_sql: >
    select
      aa.*,
      (
        select
          min(s.createdate)
        from
          ReinsValidEnquiryRegister s
        where
          aa.sequenceno = s.sequenceno
        group by
          s.sequenceno) createDate,
      (
        SELECT
          max(decode(bb.businessStatus              ,
              '1'                                   , bb.businessStatusname,
                '')) || max(decode(bb.businessStatus,
              '2'                                   , '->' || bb.businessStatusname,
                '')) || max(decode(bb.businessStatus,
              '3'                                   , '->' || bb.businessStatusname,
                '')) || max(decode(bb.businessStatus,
              '4'                                   , '->' || bb.businessStatusname,
                '')) || max(decode(bb.businessStatus,
              '5'                                   , '->' || bb.businessStatusname,
                '')) || max(decode(bb.businessStatus,
              '6'                                   , '->' || bb.businessStatusname,
                '')) || max(decode(bb.businessStatus,
              '7'                                   , '->' || bb.businessStatusname,
                '')) workflow
        FROM
          Reinsvalidenquiryregisterverify bb
        where
          bb.sequenceNo = aa.sequenceNo
        group by
          bb.sequenceNo) workflow
    from
      (
        select
          to_date(to_char(a.closedate, 'yyyy-mm-dd'), 'yyyy-mm-dd') as closedate,
          Decode(c.riskunitcode                                                 ,
              '0'                                                               , '整单',
                c.riskunitcode) as riskUnitCode                                 ,
          c.layerNo                                                             ,
          decode(c.riskunitcode                                                 ,
              '0'                                                               , (
                select
                  sum(ss.sharerate) / count(distinct ss.riskunitcode)
                from
                  reinsshare ss
                where
                  ss.reinsmode in ('181',
                                  '182')
                and ss.validflag    = '1'
                and ss.drecertifyno = c.certifyNo),
                (
                  select
                    sum(ss.sharerate)
                  from
                    reinsshare ss
                  where
                    ss.reinsmode in ('181',
                                    '182')
                  and ss.validflag    = '1'
                  and ss.drecertifyno = c.certifyNo
                  and ss.riskunitcode = c.riskunitcode)) as retRate   ,
          100                                            as retAllRate,
          DECODE(c.sumfacshare                                        ,
              null                                                    , 0,
                c.sumfacshare)                                           as signedLineOwn                       ,
          to_date(to_char(c.facConfirmDate, 'yyyy-mm-dd'), 'yyyy-mm-dd') as facConfirmDate                      ,
          DECODE(l.locationflag                                                                                 ,
              'D'                                                                                               , '否',
                'F'                                                                                             , '是',
                  '')      as withHoldFlag                                                                           ,
          b.recertifyno    as recertifyNo                                                                            ,
          c.cutthroughflag as cutthroughflag                                                                         ,
          a.sequenceno     as SequenceNo                                                                             ,
          DECODE(c.signdate                                                                                          ,
              null                                                                                                   , '已录单',
                '归档完毕') as BusinessStatus                                                                            ,
          DECODE(a.isBranch                                                                                          ,
              '1'                                                                                                    , '是',
                '否')           as isBranch                                                                                     ,
          a.businessstatusdesc as BusinessStatusDesc                                                                           ,
          fd.categoryname      as ClassCode                                                                                    ,
          fd.riskCName         as riskName                                                                                     ,
          a.branchName                                                                                                         ,
          a.reportno           as ReportNo                                                                                               ,
          a.branchoperatorname as BranchOperatorName                                                                                     ,
          a.operatorname       as OperatorName                                                                                           ,
          a.itemname           as ItemName                                                                                               ,
          a.riskclassname      as RiskClassName                                                                                          ,
          a.faccodename        as FacCodeName                                                                                            ,
          DECODE(c.currency                                                                                                              ,
              null                                                                                                                       , '',
                c.currency) as Currency                                                                                                  ,
          DECODE(c.gbbaseshare                                                                                                           ,
              null                                                                                                                       , 0,
                c.gbbaseshare) as CoinsRate                                                                                              ,
          c.ReinsCode                                                                                                                    ,
          (
            select
              fdr.longname
            from
              fdreins fdr
            where
              fdr.reinscode = c.reinscode) as ReinsName,
          c.Freinscode                                 ,
          (
            select
              fdr.longname
            from
              fdreins fdr
            where
              fdr.reinscode = c.freinscode) as FreinsName  ,
          c.accreinscode                    as accreinscode,
          (
            select
              fdr.longname
            from
              fdreins fdr
            where
              fdr.reinscode = c.accreinscode) as accReinsName,
          c.brokerCode                                       ,
          (
            select
              fdr.longname
            from
              fdreins fdr
            where
              fdr.reinscode = c.brokerCode) as brokerName         ,
          c.DiffFlag                                              ,
          c.certifyno as CertifyNo                                ,
          DECODE(c.endorno                                        ,
              null                                                , 'P',
                'E') as certiType                                 ,
          a.CloseCodeName CloseCode                               ,
          null as EnquiryInputDate                                ,
          ''   as AccInputDate                                    ,
          ''   as AccPaymentCode                                  ,
          ''   as AccPaymentDate                                  ,
          ''   as TelNo                                           ,
          c.AccRemarks                                            ,
          c.FacSlipFlag                                           ,
          c.FacSlipDate                                           ,
          c.facType                                               ,
          DECODE(b.amount                                         ,
              null                                                , 0,
                b.amount) as Amount                               ,
          DECODE(b.premium                                        ,
              null                                                , 0,
                b.premium) as Premium                             ,
          DECODE(b.notaxpremium                                   ,
              null                                                , 0,
                b.notaxpremium) as notaxpremium                   ,
          DECODE(b.baseamount                                     ,
              null                                                , 0,
                b.baseamount) as BaseAmount                       ,
          DECODE(b.basepremium                                    ,
              null                                                , 0,
                b.basepremium) as BasePremium                     ,
          DECODE(b.notaxbasepremium                               ,
              null                                                , 0,
                b.notaxbasepremium) as notaxbasepremium           ,
          DECODE(c.sumfacshare                                    ,
              null                                                , 0,
                c.sumfacshare) as OutSignedLine                   ,
          DECODE(c.outAmount                                      ,
              null                                                , 0,
                c.outAmount) as outAmount                         ,
          DECODE(c.outPremium                                     ,
              null                                                , 0,
                c.outPremium) as outPremium                       ,
          DECODE(c.noTaxoutPremium                                ,
              null                                                , 0,
                c.noTaxoutPremium) as noTaxoutPremium             ,
          d.amount                 as RetenAmount                 ,
          d.premium                as RetenPremium                ,
          a.claimcondition         as ClaimCondition              ,
          DECODE(a.offeredLine                                    ,
              null                                                , 0,
                a.offeredLine) as OfferedLine                     ,
          DECODE(c.sumfacshare * c.gbbaseshare / 100              ,
              null                                                , 0,
                c.sumfacshare * c.gbbaseshare / 100) as SignedLine,
          c.SpecialFacFlag                                        ,
          DECODE(c.WrittenLine                                    ,
              null                                                , 0,
                c.WrittenLine) as WrittenLine                     ,
          DECODE(c.BaseShare                                      ,
              null                                                , 0,
                c.BaseShare) as BaseShare                         ,
          DECODE(c.CommRate                                       ,
              null                                                , 0,
                c.CommRate)                  as CommRate                           ,
          0                                  as OutSumPremium                      ,
          0                                  as Commission                         ,
          0                                  as TaxFee                             ,
          0                                  as AddTaxFee                          ,
          0                                  as OtherFee                           ,
          0                                  as Balance                            ,
          to_char(c.startdate, 'yyyy-mm-dd') as StartDate                          ,
          to_char(c.enddate, 'yyyy-mm-dd')   as EndDate                            ,
          ''                                 as ExecutiveRemark                    ,
          a.remarks                          as Remarks                            ,
          c.FacilityCode                     as FacilityCode                       ,
          a.firstdate                        as FirstDate                          ,
          a.noTaskReason                     as noTaskReason                       ,
          a.takeDate                         as takeDate                           ,
          a.afterDate                        as AfterDate                          ,
          a.taskEndDate                      as taskEndDate                        ,
          c.verifyDate                       as verifyDate                         ,
          c.underWriteEndDate                as underWriteEndDate                  ,
          c.underWriteEndDate operateDate                                          ,
          decode(a.BusinessStatus                                                  ,
              '1'                                                                  , b.bindVersionNo || '(排分中)',
                b.bindVersionNo || '(排分中已获得承保能力)') versionNo                       ,
          a.validStatus
        from
          (
            select
              drcertifyno       ,
              riskunitcode      ,
              sum(amount) amount,
              sum(premium) premium
            from
              reinsretenshare
            group by
              drcertifyno,
              riskunitcode

            union all

            select
              drcertifyno       ,
              '0'               ,
              sum(amount) amount,
              sum(premium) premium
            from
              reinsretenshare
            group by
              drcertifyno) d                    ,
          ReinsValidEnquiryRegister a           ,
          Reinsenquiryregisterbinding b         ,
          ReinsValidEnquiryRegisterVerify Verify,
          (
            select
              r.sequenceno          ,
              r.ClassCode           ,
              r.riskcode            ,
              r.comcode             ,
              e.signdate            ,
              null         as layerNo       ,
              r.verifydate as facConfirmDate,
              e.enquiryno                   ,
              e.endorno                     ,
              r.sumamount       as sumamount      ,
              r.sumpremium      as sumpremium     ,
              r.baseshare       as gbbaseshare    ,
              r.specialfacshare as specialfacshare,
              r.facshare        as facshare       ,
              r.sumfacshare     as sumfacshare    ,
              decode(r.enquirytype                ,
                  'P'                             , r.policyno,
                    'E'                           , r.endorno) as certifyno,
              r.riskunitcode riskunitcode         ,
              r.currency       as currency              ,
              e.reinscode      as reinscode             ,
              e.accreinscode   as accreinscode          ,
              e.accReinsName   as accReinsName          ,
              e.reinsname      as ReinsName             ,
              e.finalreinscode as Freinscode            ,
              e.finalreinsname as FreinsName            ,
              e.brokercode     as brokercode            ,
              e.brokerName     as brokerName            ,
              e.DiffFlag       as DiffFlag              ,
              ''               as AccRemarks            ,
              DECODE(e.signDate                         ,
                  null                                  , '否',
                    '是')                     as FacSlipFlag                 ,
              to_char(e.signDate, 'yyyy-mm') as FacSlipDate                 ,
              decode(r.enquirytype                                          ,
                  'P'                                                       , e.amount,
                    'E'                                                     , e.chgamount,
                      0) as outAmount                                       ,
              decode(r.enquirytype                                          ,
                  'P'                                                       , e.premium,
                    'E'                                                     , e.chgpremium,
                      0) as outPremium                                      ,
              decode(r.enquirytype                                          ,
                  'P'                                                       , e.notaxpremium,
                    'E'                                                     , e.chgnotaxpremium,
                      0) as notaxOutPremium                                 ,
              e.vatfee   as taxfee                                          ,
              DECODE(e.facflag                                              ,
                  '1'                                                       , '是',
                    '否')                                         as SpecialFacFlag                                  ,
              (nvl(e.signedline, 0) * nvl(r.BaseShare, 0)) / 100 as WrittenLine                                     ,
              nvl(e.signedline, 0)                               as BaseShare                                       ,
              e.signedcomm                                       as CommRate                                        ,
              e.premium * e.signedcomm / 100                     as Commission                                      ,
              ''                                                 as FacilityCode                                    ,
              '比例临分' facType                                                                                        ,
              r.startdate                                                                                           ,
              r.enddate                                                                                             ,
              e.cutthroughflag as cutthroughflag                                                                    ,
              decode(r.verifyFlag                                                                                   ,
                  3                                                                                                 , verifyDate,
                    null) verifyDate                                                                                ,
              decode(r.enquiryType                                                                                  ,
                  'P'                                                                                               , pUnit.underWriteEndDate,
                    'E'                                                                                             , eUnit.underWriteEndDate,
                      null) underWriteEndDate                                                                       ,
              (
                select
                  (
                    case
                    when
                      count(1) = 0
                    then
                      SYSDATE
                    else
                      max(writtenDate)
                    end) writtenDate
                from
                  fzacc acc
                where
                  (
                    (
                      r.policyNo        = acc.drcertifyNo
                      and r.enquiryType = 'P')
                    or (
                      r.endorNo         = acc.drcertifyNo
                      and r.enquiryType = 'E'))
                and e.accReinsCode      = acc.accReinsCode
                and e.withHoldFlag      = acc.withHoldFlag) writtenDate
            from
              ReinsValidReceive e,
              ReinsValidEnquiry r
            left join
              ReinsPolicyUnit pUnit
            on
              r.policyNo = pUnit.policyNo
            left join
              ReinsEndorUnit eUnit
            on
              r.endorNo = eUnit.endorNo
            where
              r.enquiryno     = e.enquiryno
            and r.versionno   = e.versionno
            and e.versiondesc <> ' '
            and r.sequenceNo  <> ' '
            and r.enquirytype in ('P',
                                 'E')
            and r.validflag = '1'

            union all

            select
              r.sequenceno               ,
              r.ClassCode                ,
              r.riskcode                 ,
              r.comcode                  ,
              f.signdate                 ,
              f.layerno    as layerNo       ,
              r.verifydate as facConfirmDate,
              f.enquiryno                   ,
              r.endorno                     ,
              r.sumamount       as sumamount      ,
              r.sumpremium      as sumpremium     ,
              r.baseshare       as gbbaseshare    ,
              r.specialfacshare as specialfacshare,
              r.facshare        as facshare       ,
              0                 as sumfacshare    ,
              decode(r.enquirytype                ,
                  'P'                             , r.policyno,
                    'E'                           , r.endorno) as certifyno,
              r.riskunitcode riskunitcode         ,
              r.currency     as currency              ,
              f.reinscode    as Reinscode             ,
              f.accreinscode as accreinscode          ,
              f.accReinsName as accReinsName          ,
              f.reinsname    as ReinsName             ,
              f.freinscode   as Freinscode            ,
              f.freinsname   as FreinsName            ,
              f.brokercode   as brokercode            ,
              f.brokerName   as brokerName            ,
              DECODE(f.DiffFlag                       ,
                  '1'                                 , '费率差异',
                    '无差异') as DiffFlag                ,
              ''           as AccRemarks              ,
              '' FacSlipFlag                          ,
              '' as FacSlipDate                       ,
              0  as outAmount                         ,
              decode(r.enquirytype                    ,
                  'P'                                 , f.premium,
                    'E'                               , f.chgpreium,
                      0) as outPremium                ,
              decode(r.enquirytype                    ,
                  'P'                                 , f.notaxpremium,
                    'E'                               , f.CHGEXTAXPREMIUM,
                      0) as notaxoutPremium           ,
              f.vat      as taxfee                    ,
              DECODE(f.facflag                        ,
                  '1'                                 , '是',
                    '否')          as SpecialFacFlag            ,
              nvl(f.sharerate, 0) as WrittenLine               ,
              nvl(f.sharerate, 0) as BaseShare                 ,
              DECODE(f.COMMISSIONSRATE                         ,
                  null                                         , 0,
                    f.COMMISSIONSRATE)      as CommRate             ,
              f.premium * f.commissionsrate as Commission           ,
              ''                            as FacilityCode         ,
              '非比例临分' facType                                       ,
              r.startdate                                           ,
              r.enddate                                             ,
              '0' as cutthroughflag                                 ,
              decode(r.verifyFlag                                   ,
                  3                                                 , verifyDate,
                    null) verifyDate                                ,
              decode(r.enquiryType                                  ,
                  'P'                                               , pUnit.underWriteEndDate,
                    'E'                                             , eUnit.underWriteEndDate,
                      null) underWriteEndDate                       ,
              (
                select
                  (
                    case
                    when
                      count(1) = 0
                    then
                      SYSDATE
                    else
                      max(writtenDate)
                    end) writtenDate
                from
                  fzacc acc
                where
                  (
                    (
                      r.policyNo        = acc.drcertifyNo
                      and r.enquiryType = 'P')
                    or (
                      r.endorNo         = acc.drcertifyNo
                      and r.enquiryType = 'E'))
                and f.accReinsCode      = acc.accReinsCode
                and f.withHoldFlag      = acc.withHoldFlag
                and f.layerno           = acc.sectionNo) writtenDate
            from
              REINSVALIDXOLRECEIVE f,
              ReinsValidEnquiry r
            left join
              ReinsPolicyUnit pUnit
            on
              r.policyNo = pUnit.policyNo
            left join
              ReinsEndorUnit eUnit
            on
              r.endorNo = eUnit.endorNo
            where
              r.enquiryno     = f.enquiryno
            and r.versionno   = f.versionno
            and f.versiondesc <> ' '
            and r.sequenceNo  <> ' '
            and r.enquirytype in ('P',
                                 'E')
            and r.validflag = '1') c,
          fdrisk fd                 ,
          fdCompany company         ,
          fdReins l
        where
          c.certifyno        = b.certifyno
        and fd.riskcode      = c.riskcode
        and l.reinscode      = c.freinscode
        and company.comcode  = a.branchcode
        and d.DRCERTIFYNO( +) = c.certifyno
        and d.RISKUNITCODE(+) = c.riskunitcode
        and fd.validStatus    = '1'
        and c.riskunitcode    = b.riskunitcode
        and a.validflag       = '1'
        and a.sequenceNo      = b.sequenceNo
        and a.versionno       = b.versionno
        and a.sequenceNo      = c.sequenceNo
        and a.sequenceNo      = verify.sequenceNo
        and a.versionno       = verify.versionno
        and a.branchcode in
          (
            select
              comCode
            from
              FDCOMPANY
            where
              comPath like '%11000000%')

        union all

        select
          a.closedate as closedate                     ,
          ''          as riskUnitCode                  ,
          c.layerNo                                    ,
          decode(c.facType                             ,
              '比例临分'                                   , a.retenShare / a.coinsRate * 100,
                0)             as retRate                          ,
          nvl(a.retenShare, 0) as retAllRate                       ,
          decode(a.signedLine                                      ,
              null                                                 , 0,
                a.signedLine / a.coinsRate * 100) as signedLineOwn ,
          null                                    as facConfirmDate,
          DECODE(
            (
              select distinct
                l.locationflag
              from
                fdReins l
              where
                l.reinscode = c.freinscode),
              'D'                          , '否',
                'F'                        , '是',
                  '')          as withHoldFlag      ,
          ''                   as recertifyNo       ,
          ''                   as cutthroughflag    ,
          a.sequenceno         as SequenceNo        ,
          a.businessstatusName as BusinessStatus    ,
          DECODE(a.isBranch                         ,
              '1'                                   , '是',
                '否')           as isBranch                    ,
          a.businessstatusdesc as BusinessStatusDesc          ,
          a.classname          as classCode                   ,
          null riskName                                       ,
          a.branchname         as branchName                          ,
          a.reportno           as ReportNo                            ,
          a.branchoperatorname as BranchOperatorName                  ,
          a.operatorname       as OperatorName                        ,
          a.itemname           as ItemName                            ,
          a.riskclassname      as RiskClassName                       ,
          a.faccodename        as FacCodeName                         ,
          DECODE(a.currency                                           ,
              null                                                    , '',
                a.currency) as Currency                               ,
          DECODE(a.coinsrate                                          ,
              null                                                    , 0,
                a.coinsrate) as CoinsRate                             ,
          c.ReinsCode                                                 ,
          c.ReinsName                                                 ,
          c.Freinscode                                                ,
          c.FreinsName                                                ,
          c.accreinscode as accreinscode                              ,
          c.accReinsName                                              ,
          c.brokerCode                                                ,
          c.brokerName                                                ,
          c.DiffFlag                                                  ,
          ''              as CertifyNo                                             ,
          ''              as certiType                                             ,
          a.CloseCodeName as CloseCode                                             ,
          null            as EnquiryInputDate                                      ,
          ''              as AccInputDate                                          ,
          ''              as AccPaymentCode                                        ,
          ''              as AccPaymentDate                                        ,
          c.telno         as telNo                                                 ,
          c.AccRemarks                                                             ,
          c.FacSlipFlag                                                            ,
          c.FacSlipDate                                                            ,
          c.facType                                                                ,
          DECODE(a.amount                                                          ,
              null                                                                 , 0,
                a.amount) as Amount                                                ,
          DECODE(a.premium                                                         ,
              null                                                                 , 0,
                a.premium) as Premium                                              ,
          DECODE(a.notaxpremium                                                    ,
              null                                                                 , 0,
                a.notaxpremium) as notaxpremium                                    ,
          DECODE(a.baseamount                                                      ,
              null                                                                 , 0,
                a.baseamount) as BaseAmount                                        ,
          DECODE(a.basepremium                                                     ,
              null                                                                 , 0,
                a.basepremium) as BasePremium                                      ,
          DECODE(a.notaxbasepremium                                                ,
              null                                                                 , 0,
                a.notaxbasepremium) as notaxbasepremium                            ,
          DECODE(c.OutSignedLine                                                   ,
              null                                                                 , 0,
                c.OutSignedLine) as OutSignedLine                                  ,
          DECODE(c.outAmount                                                       ,
              null                                                                 , 0,
                c.outAmount) as outAmount                                          ,
          DECODE(c.outPremium                                                      ,
              null                                                                 , 0,
                c.outPremium) as outPremium                                        ,
          DECODE(c.noTaxoutPremium                                                 ,
              null                                                                 , 0,
                c.noTaxoutPremium) as noTaxoutPremium                              ,
          DECODE(a.retenamount                                                     ,
              null                                                                 , 0,
                a.retenamount) as RetenAmount                                      ,
          DECODE(a.retenpremium                                                    ,
              null                                                                 , 0,
                a.retenpremium) as RetenPremium                                    ,
          a.claimcondition      as ClaimCondition                                  ,
          DECODE(a.offeredline                                                     ,
              null                                                                 , 0,
                a.offeredline) as OfferedLine                                      ,
          DECODE(c.SignedLine                                                      ,
              null                                                                 , 0,
                c.SignedLine) as SignedLine                                        ,
          c.SpecialFacFlag                                                         ,
          DECODE(c.WrittenLine                                                     ,
              null                                                                 , 0,
                c.WrittenLine) as WrittenLine                                      ,
          DECODE(c.BaseShare                                                       ,
              null                                                                 , 0,
                c.BaseShare) as BaseShare                                          ,
          DECODE(c.CommRate                                                        ,
              null                                                                 , 0,
                c.CommRate) as CommRate                                            ,
          DECODE(c.noTaxoutPremium                                                 ,
              null                                                                 , 0,
                c.noTaxoutPremium) as OutSumPremium                                ,
          DECODE(c.Commission                                                      ,
              null                                                                 , 0,
                c.Commission)                as Commission                                        ,
          0                                  as TaxFee                                            ,
          0                                  as AddTaxFee                                         ,
          0                                  as OtherFee                                          ,
          0                                  as Balance                                           ,
          to_char(a.startdate, 'yyyy-mm-dd') as StartDate                                         ,
          to_char(a.enddate, 'yyyy-mm-dd')   as EndDate                                           ,
          ''                                 as ExecutiveRemark                                   ,
          a.remarks                          as Remarks                                           ,
          c.FacilityCode                     as FacilityCode                                      ,
          a.firstdate                        as FirstDate                                         ,
          a.noTaskReason                     as noTaskReason                                      ,
          a.takeDate                         as takeDate                                          ,
          null                               as AfterDate                                         ,
          a.taskEndDate                      as taskEndDate                                       ,
          null                               as verifyDate                                        ,
          null                               as underWriteEndDate                                 ,
          verify.operateDate                                                                      ,
          decode(a.BusinessStatus                                                                 ,
              '1'                                                                                 , a.versionno || '（排分中)',
                a.versionNo || '(排分中已获得承保能力)') versionNo                                          ,
          a.validStatus
        from
          ReinsValidEnquiryRegister a
        left join
          ReinsValidEnquiryRegisterVerify Verify
        on
          a. sequenceno = Verify.sequenceno
        and a.versionno = Verify.versionNo
        left join
          (
            select
              null as layerNo                ,
              r.telno                        ,
              e.sequenceno                   ,
              r.reinscode  as reinscode       ,
              r.reinsname  as ReinsName       ,
              r.freinscode as Freinscode      ,
              r.freinsname as FreinsName      ,
              r.accreinscode accreinscode     ,
              r.accReinsName                  ,
              r.brokerCode                    ,
              r.brokerName                    ,
              r.DiffFlag   as DiffFlag          ,
              r.accremarks as AccRemarks        ,
              DECODE(r.facslipflag              ,
                  1                             , '是',
                    '否')                        as FacSlipFlag         ,
              to_char(r.facslipdate, 'yyyy-mm') as FacSlipDate         ,
              r.amount                          as outAmount           ,
              r.premium                         as outPremium          ,
              r.notaxpremium                    as notaxoutPremium     ,
              DECODE(r.specialfacflag                                  ,
                  '1'                                                  , '是',
                    '否')          as SpecialFacFlag                             ,
              r.WRITTENLINE       as WrittenLine                                ,
              nvl(r.BaseShare, 0) as BaseShare                                  ,
              DECODE(r.commrate                                                 ,
                  null                                                          , 0,
                    r.commrate) as CommRate                                     ,
              DECODE(r.commRate                                                 ,
                  null                                                          , 0,
                    r.commRate) * DECODE(r.premium                              ,
                  null                                                          , 0,
                    r.premium) / 100 as Commission                              ,
              DECODE(e.signedline                                               ,
                  null                                                          , 0,
                    e.signedline) as SignedLine                                 ,
              DECODE(round(e.signedline / e.coinsrate / 100, 6)                 ,
                  null                                                          , 0,
                    round(e.signedline / e.coinsrate / 100, 6)) as OutSignedLine,
              r.facilitycode facility                                           ,
              '' as FacilityCode                                                ,
              '比例临分' facType                                                    ,
              e.versionNo
            from
              reinsvalidenquiryregister e,
              reinsvalidenquiryregisterreins r
            where
              r.sequenceno  = e.sequenceno
            and e.versionno = r.versionno

            union all

            select
              f.layerNo as layerNo        ,
              f.telno                     ,
              r.sequenceno                ,
              f.reinscode  as Reinscode    ,
              f.reinsname  as ReinsName    ,
              f.freinscode as Freinscode   ,
              f.freinsname as FreinsName   ,
              f.accreinscode accreinscode  ,
              f.accReinsName               ,
              f.brokerCode                 ,
              f.brokerName                 ,
              DECODE(f.diffflag            ,
                  '1'                      , '费率差异',
                    '无差异') as DiffFlag     ,
              f.accremarks as AccRemarks   ,
              DECODE(f.facslipflag         ,
                  1                        , '是',
                    '否')                        as FacSlipFlag    ,
              to_char(f.facslipdate, 'yyyy-mm') as FacSlipDate    ,
              0                                 as outAmount      ,
              f.repremium                       as outPremium     ,
              f.noTaxrepremium                  as noTaxoutPremium,
              DECODE(f.specialfacflag                             ,
                  '1'                                             , '是',
                    '否')           as SpecialFacFlag                        ,
              nvl(f.signedline, 0) as WrittenLine                           ,
              0                    as BaseShare                             ,
              DECODE(f.commrate                                             ,
                  null                                                      , 0,
                    f.commrate) as CommRate                                 ,
              DECODE(f.commrate                                             ,
                  null                                                      , 0,
                    f.commrate) * DECODE(f.repremium                        ,
                  null                                                      , 0,
                    f.repremium) / 100 as Commission                        ,
              0                        as SignedLine                        ,
              0                        as OutSignedLine                     ,
              f.facilitycode facility                                       ,
              '' as FacilityCode                                            ,
              '非比例临分' facType                                               ,
              r.versionNo
            from
              reinsvalidenquiryregisterxreins f,
              reinsvalidenquiryregister r
            where
              r.sequenceno  = f.sequenceno
            and r.versionNo = f.versionNo) c
        on
          a.sequenceno  = c.sequenceno
        and a.versionno = c.versionNo
        where
          1 = 1
        and not exists
          (
            select
              1
            from
              reinsenquiryregisterbinding f
            where
              a.sequenceno  = f.sequenceno
            and a.versionNo = f.bindVersionNo)
        and a.branchcode in
          (
            select
              comCode
            from
              FDCOMPANY
            where
              comPath like '%11000000%')) aa
    where
      1 = 1
    order by
      aa.sequenceno asc                                 ,
      cast(regexp_substr(aa.versionNo, '[0-9]+') as int),
      aa.certifyno desc                                 ,
      aa.facType                                        ,
      aa.layerno asc
  tidb_sql: >
    select aa.* , ( select min(s.createdate) from reinsvalidenquiryregister s where aa.sequenceno = s.sequenceno group by s.sequenceno ) as createdate , ( select concat(max(case bb.businessstatus when '1' then bb.businessstatusname else '' end), max(case bb.businessstatus when '2' then concat('->', bb.businessstatusname) else '' end), max(case bb.businessstatus when '3' then concat('->', bb.businessstatusname) else '' end), max(case bb.businessstatus when '4' then concat('->', bb.businessstatusname) else '' end), max(case bb.businessstatus when '5' then concat('->', bb.businessstatusname) else '' end), max(case bb.businessstatus when '6' then concat('->', bb.businessstatusname) else '' end), max(case bb.businessstatus when '7' then concat('->', bb.businessstatusname) else '' end)) as workflow from reinsvalidenquiryregisterverify bb where bb.sequenceno = aa.sequenceno group by bb.sequenceno ) as workflow from ( select str_to_date(date_format(a.closedate, '%y-%m-%d'), '%y-%m-%d') as closedate , case c.riskunitcode when '0' then '整单' else c.riskunitcode end as riskunitcode , c.layerno , case c.riskunitcode when '0' then ( select sum(ss.sharerate) / count(distinct ss.riskunitcode) from reinsshare ss where ss.reinsmode in ('181', '182') and ss.validflag = '1' and ss.drecertifyno = c.certifyno ) else ( select sum(ss.sharerate) from reinsshare ss where ss.reinsmode in ('181', '182') and ss.validflag = '1' and ss.drecertifyno = c.certifyno and ss.riskunitcode = c.riskunitcode ) end as retrate , 100 as retallrate , case c.sumfacshare when null then 0 else c.sumfacshare end as signedlineown , str_to_date(date_format(c.facconfirmdate, '%y-%m-%d'), '%y-%m-%d') as facconfirmdate , case l.locationflag when 'd' then '否' when 'f' then '是' else '' end as withholdflag , b.recertifyno as recertifyno, c.cutthroughflag as cutthroughflag, a.sequenceno as sequenceno , case c.signdate when null then '已录单' else '归档完毕' end as businessstatus , case a.isbranch when '1' then '是' else '否' end as isbranch , a.businessstatusdesc as businessstatusdesc, fd.categoryname as classcode, fd.riskcname as riskname, a.branchname, a.reportno as reportno , a.branchoperatorname as branchoperatorname, a.operatorname as operatorname, a.itemname as itemname, a.riskclassname as riskclassname, a.faccodename as faccodename , case c.currency when null then '' else c.currency end as currency , case c.gbbaseshare when null then 0 else c.gbbaseshare end as coinsrate , c.reinscode , ( select fdr.longname from fdreins fdr where fdr.reinscode = c.reinscode ) as reinsname, c.freinscode , ( select fdr.longname from fdreins fdr where fdr.reinscode = c.freinscode ) as freinsname, c.accreinscode as accreinscode , ( select fdr.longname from fdreins fdr where fdr.reinscode = c.accreinscode ) as accreinsname, c.brokercode , ( select fdr.longname from fdreins fdr where fdr.reinscode = c.brokercode ) as brokername, c.diffflag, c.certifyno as certifyno , case c.endorno when null then 'p' else 'e' end as certitype , a.closecodename as closecode, null as enquiryinputdate, '' as accinputdate, '' as accpaymentcode, '' as accpaymentdate , '' as telno, c.accremarks, c.facslipflag, c.facslipdate, c.factype , case b.amount when null then 0 else b.amount end as amount , case b.premium when null then 0 else b.premium end as premium , case b.notaxpremium when null then 0 else b.notaxpremium end as notaxpremium , case b.baseamount when null then 0 else b.baseamount end as baseamount , case b.basepremium when null then 0 else b.basepremium end as basepremium , case b.notaxbasepremium when null then 0 else b.notaxbasepremium end as notaxbasepremium , case c.sumfacshare when null then 0 else c.sumfacshare end as outsignedline , case c.outamount when null then 0 else c.outamount end as outamount , case c.outpremium when null then 0 else c.outpremium end as outpremium , case c.notaxoutpremium when null then 0 else c.notaxoutpremium end as notaxoutpremium , d.amount as retenamount, d.premium as retenpremium, a.claimcondition as claimcondition , case a.offeredline when null then 0 else a.offeredline end as offeredline , case c.sumfacshare * c.gbbaseshare / 100 when null then 0 else c.sumfacshare * c.gbbaseshare / 100 end as signedline , c.specialfacflag , case c.writtenline when null then 0 else c.writtenline end as writtenline , case c.baseshare when null then 0 else c.baseshare end as baseshare , case c.commrate when null then 0 else c.commrate end as commrate , 0 as outsumpremium, 0 as commission, 0 as taxfee, 0 as addtaxfee, 0 as otherfee , 0 as balance, date_format(c.startdate, '%y-%m-%d') as startdate , date_format(c.enddate, '%y-%m-%d') as enddate, '' as executiveremark , a.remarks as remarks, c.facilitycode as facilitycode, a.firstdate as firstdate, a.notaskreason as notaskreason, a.takedate as takedate , a.afterdate as afterdate, a.taskenddate as taskenddate, c.verifydate as verifydate, c.underwriteenddate as underwriteenddate, c.underwriteenddate as operatedate , case a.businessstatus when '1' then concat(b.bindversionno, '(排分中)') else concat(b.bindversionno, '(排分中已获得承保能力)') end as versionno , a.validstatus from reinsvalidenquiryregister a join reinsenquiryregisterbinding b on a.sequenceno = b.sequenceno and a.versionno = b.versionno join ( select r.sequenceno, r.classcode, r.riskcode, r.comcode, e.signdate , null as layerno, r.verifydate as facconfirmdate, e.enquiryno, e.endorno, r.sumamount as sumamount , r.sumpremium as sumpremium, r.baseshare as gbbaseshare, r.specialfacshare as specialfacshare, r.facshare as facshare, r.sumfacshare as sumfacshare , case r.enquirytype when 'p' then r.policyno when 'e' then r.endorno else null end as certifyno , r.riskunitcode as riskunitcode, r.currency as currency, e.reinscode as reinscode, e.accreinscode as accreinscode, e.accreinsname as accreinsname , e.reinsname as reinsname, e.finalreinscode as freinscode, e.finalreinsname as freinsname, e.brokercode as brokercode, e.brokername as brokername , e.diffflag as diffflag, '' as accremarks , case e.signdate when null then '否' else '是' end as facslipflag , date_format(e.signdate, '%y-%m') as facslipdate , case r.enquirytype when 'p' then e.amount when 'e' then e.chgamount else 0 end as outamount , case r.enquirytype when 'p' then e.premium when 'e' then e.chgpremium else 0 end as outpremium , case r.enquirytype when 'p' then e.notaxpremium when 'e' then e.chgnotaxpremium else 0 end as notaxoutpremium , e.vatfee as taxfee , case e.facflag when '1' then '是' else '否' end as specialfacflag , ifnull(e.signedline, 0) * ifnull(r.baseshare, 0) / 100 as writtenline , ifnull(e.signedline, 0) as baseshare, e.signedcomm as commrate , e.premium * e.signedcomm / 100 as commission, '' as facilitycode , '比例临分' as factype, r.startdate, r.enddate, e.cutthroughflag as cutthroughflag , case r.verifyflag when 3 then verifydate else null end as verifydate , case r.enquirytype when 'p' then punit.underwriteenddate when 'e' then eunit.underwriteenddate else null end as underwriteenddate , ( select case when count(1) = 0 then now() else max(writtendate) end as writtendate from fzacc acc where ((r.policyno = acc.drcertifyno and r.enquirytype = 'p') or (r.endorno = acc.drcertifyno and r.enquirytype = 'e')) and e.accreinscode = acc.accreinscode and e.withholdflag = acc.withholdflag ) as writtendate from reinsvalidreceive e join reinsvalidenquiry r on r.enquiryno = e.enquiryno and r.versionno = e.versionno left join reinsendorunit eunit on r.endorno = eunit.endorno left join reinspolicyunit punit on r.policyno = punit.policyno where e.versiondesc <> ' ' and r.sequenceno <> ' ' and r.validflag = '1' and r.enquirytype in ('p', 'e') union all select r.sequenceno, r.classcode, r.riskcode, r.comcode, f.signdate , f.layerno as layerno, r.verifydate as facconfirmdate, f.enquiryno, r.endorno, r.sumamount as sumamount , r.sumpremium as sumpremium, r.baseshare as gbbaseshare, r.specialfacshare as specialfacshare, r.facshare as facshare, 0 as sumfacshare , case r.enquirytype when 'p' then r.policyno when 'e' then r.endorno else null end as certifyno , r.riskunitcode as riskunitcode, r.currency as currency, f.reinscode as reinscode, f.accreinscode as accreinscode, f.accreinsname as accreinsname , f.reinsname as reinsname, f.freinscode as freinscode, f.freinsname as freinsname, f.brokercode as brokercode, f.brokername as brokername , case f.diffflag when '1' then '费率差异' else '无差异' end as diffflag , '' as accremarks, '' as facslipflag, '' as facslipdate, 0 as outamount , case r.enquirytype when 'p' then f.premium when 'e' then f.chgpreium else 0 end as outpremium , case r.enquirytype when 'p' then f.notaxpremium when 'e' then f.chgextaxpremium else 0 end as notaxoutpremium , f.vat as taxfee , case f.facflag when '1' then '是' else '否' end as specialfacflag , ifnull(f.sharerate, 0) as writtenline , ifnull(f.sharerate, 0) as baseshare , case f.commissionsrate when null then 0 else f.commissionsrate end as commrate , f.premium * f.commissionsrate as commission, '' as facilitycode, '非比例临分' as factype , r.startdate, r.enddate, '0' as cutthroughflag , case r.verifyflag when 3 then verifydate else null end as verifydate , case r.enquirytype when 'p' then punit.underwriteenddate when 'e' then eunit.underwriteenddate else null end as underwriteenddate , ( select case when count(1) = 0 then now() else max(writtendate) end as writtendate from fzacc acc where ((r.policyno = acc.drcertifyno and r.enquirytype = 'p') or (r.endorno = acc.drcertifyno and r.enquirytype = 'e')) and f.accreinscode = acc.accreinscode and f.withholdflag = acc.withholdflag and f.layerno = acc.sectionno ) as writtendate from reinsvalidxolreceive f join reinsvalidenquiry r on r.enquiryno = f.enquiryno and r.versionno = f.versionno left join reinsendorunit eunit on r.endorno = eunit.endorno left join reinspolicyunit punit on r.policyno = punit.policyno where f.versiondesc <> ' ' and r.sequenceno <> ' ' and r.validflag = '1' and r.enquirytype in ('p', 'e') ) c on a.sequenceno = c.sequenceno and c.certifyno = b.certifyno and c.riskunitcode = b.riskunitcode join fdcompany company on company.comcode = a.branchcode join reinsvalidenquiryregisterverify verify on a.sequenceno = verify.sequenceno and a.versionno = verify.versionno join fdrisk fd on fd.riskcode = c.riskcode join fdreins l on l.reinscode = c.freinscode left join ( select drcertifyno, riskunitcode, sum(amount) as amount , sum(premium) as premium from reinsretenshare group by drcertifyno, riskunitcode union all select drcertifyno, '0', sum(amount) as amount , sum(premium) as premium from reinsretenshare group by drcertifyno ) d on c.certifyno = d.drcertifyno and c.riskunitcode = d.riskunitcode where fd.validstatus = '1' and a.validflag = '1' and a.branchcode in ( select comcode from fdcompany where compath like '%11000000%' ) union all select a.closedate as closedate, '' as riskunitcode, c.layerno , case c.factype when '比例临分' then a.retenshare / a.coinsrate * 100 else 0 end as retrate , ifnull(a.retenshare, 0) as retallrate , case a.signedline when null then 0 else a.signedline / a.coinsrate * 100 end as signedlineown , null as facconfirmdate , case ( select distinct l.locationflag from fdreins l where l.reinscode = c.freinscode ) when 'd' then '否' when 'f' then '是' else '' end as withholdflag , '' as recertifyno, '' as cutthroughflag, a.sequenceno as sequenceno, a.businessstatusname as businessstatus , case a.isbranch when '1' then '是' else '否' end as isbranch , a.businessstatusdesc as businessstatusdesc, a.classname as classcode, null as riskname, a.branchname as branchname, a.reportno as reportno , a.branchoperatorname as branchoperatorname, a.operatorname as operatorname, a.itemname as itemname, a.riskclassname as riskclassname, a.faccodename as faccodename , case a.currency when null then '' else a.currency end as currency , case a.coinsrate when null then 0 else a.coinsrate end as coinsrate , c.reinscode, c.reinsname, c.freinscode, c.freinsname, c.accreinscode as accreinscode , c.accreinsname, c.brokercode, c.brokername, c.diffflag, '' as certifyno , '' as certitype, a.closecodename as closecode, null as enquiryinputdate, '' as accinputdate, '' as accpaymentcode , '' as accpaymentdate, c.telno as telno, c.accremarks, c.facslipflag, c.facslipdate , c.factype , case a.amount when null then 0 else a.amount end as amount , case a.premium when null then 0 else a.premium end as premium , case a.notaxpremium when null then 0 else a.notaxpremium end as notaxpremium , case a.baseamount when null then 0 else a.baseamount end as baseamount , case a.basepremium when null then 0 else a.basepremium end as basepremium , case a.notaxbasepremium when null then 0 else a.notaxbasepremium end as notaxbasepremium , case c.outsignedline when null then 0 else c.outsignedline end as outsignedline , case c.outamount when null then 0 else c.outamount end as outamount , case c.outpremium when null then 0 else c.outpremium end as outpremium , case c.notaxoutpremium when null then 0 else c.notaxoutpremium end as notaxoutpremium , case a.retenamount when null then 0 else a.retenamount end as retenamount , case a.retenpremium when null then 0 else a.retenpremium end as retenpremium , a.claimcondition as claimcondition , case a.offeredline when null then 0 else a.offeredline end as offeredline , case c.signedline when null then 0 else c.signedline end as signedline , c.specialfacflag , case c.writtenline when null then 0 else c.writtenline end as writtenline , case c.baseshare when null then 0 else c.baseshare end as baseshare , case c.commrate when null then 0 else c.commrate end as commrate , case c.notaxoutpremium when null then 0 else c.notaxoutpremium end as outsumpremium , case c.commission when null then 0 else c.commission end as commission , 0 as taxfee, 0 as addtaxfee, 0 as otherfee, 0 as balance , date_format(a.startdate, '%y-%m-%d') as startdate , date_format(a.enddate, '%y-%m-%d') as enddate, '' as executiveremark , a.remarks as remarks, c.facilitycode as facilitycode, a.firstdate as firstdate, a.notaskreason as notaskreason, a.takedate as takedate , null as afterdate, a.taskenddate as taskenddate, null as verifydate, null as underwriteenddate, verify.operatedate , case a.businessstatus when '1' then concat(a.versionno, '（排分中)') else concat(a.versionno, '(排分中已获得承保能力)') end as versionno , a.validstatus from reinsvalidenquiryregister a left join ( select null as layerno, r.telno, e.sequenceno, r.reinscode as reinscode, r.reinsname as reinsname , r.freinscode as freinscode, r.freinsname as freinsname, r.accreinscode as accreinscode, r.accreinsname, r.brokercode , r.brokername, r.diffflag as diffflag, r.accremarks as accremarks , case r.facslipflag when 1 then '是' else '否' end as facslipflag , date_format(r.facslipdate, '%y-%m') as facslipdate, r.amount as outamount , r.premium as outpremium, r.notaxpremium as notaxoutpremium , case r.specialfacflag when '1' then '是' else '否' end as specialfacflag , r.writtenline as writtenline, ifnull(r.baseshare, 0) as baseshare , case r.commrate when null then 0 else r.commrate end as commrate , case r.commrate when null then 0 else r.commrate end * case r.premium when null then 0 else r.premium end / 100 as commission , case e.signedline when null then 0 else e.signedline end as signedline , case round(e.signedline / e.coinsrate / 100, 6) when null then 0 else round(e.signedline / e.coinsrate / 100, 6) end as outsignedline , r.facilitycode as facility, '' as facilitycode, '比例临分' as factype, e.versionno from reinsvalidenquiryregister e join reinsvalidenquiryregisterreins r on r.sequenceno = e.sequenceno and e.versionno = r.versionno union all select f.layerno as layerno, f.telno, r.sequenceno, f.reinscode as reinscode, f.reinsname as reinsname , f.freinscode as freinscode, f.freinsname as freinsname, f.accreinscode as accreinscode, f.accreinsname, f.brokercode , f.brokername , case f.diffflag when '1' then '费率差异' else '无差异' end as diffflag , f.accremarks as accremarks , case f.facslipflag when 1 then '是' else '否' end as facslipflag , date_format(f.facslipdate, '%y-%m') as facslipdate, 0 as outamount , f.repremium as outpremium, f.notaxrepremium as notaxoutpremium , case f.specialfacflag when '1' then '是' else '否' end as specialfacflag , ifnull(f.signedline, 0) as writtenline, 0 as baseshare , case f.commrate when null then 0 else f.commrate end as commrate , case f.commrate when null then 0 else f.commrate end * case f.repremium when null then 0 else f.repremium end / 100 as commission , 0 as signedline, 0 as outsignedline, f.facilitycode as facility, '' as facilitycode, '非比例临分' as factype , r.versionno from reinsvalidenquiryregisterxreins f join reinsvalidenquiryregister r on r.sequenceno = f.sequenceno and r.versionno = f.versionno ) c on a.sequenceno = c.sequenceno and a.versionno = c.versionno left join reinsvalidenquiryregisterverify verify on a.sequenceno = verify.sequenceno and a.versionno = verify.versionno where 1 = 1 and a.branchcode in ( select comcode from fdcompany where compath like '%11000000%' ) and not exists ( select 1 from reinsenquiryregisterbinding f where a.sequenceno = f.sequenceno and a.versionno = f.bindversionno ) ) aa where 1 = 1 order by aa.sequenceno asc, cast(regexp_substr(aa.versionno, '[0-9]+') as signed integer), aa.certifyno desc, aa.factype, aa.layerno asc
- comment: 复杂SQL-6
  oracle_sql: >
    select
      x.sequenceNo                              ,
      x.businessStatus                          ,
      x.businessStatusDesc                      ,
      x.className                               ,
      x.branchName                              ,
      x.reportNo                                ,
      x.branchOperatorName                      ,
      x.operatorName                            ,
      x.itemName                                ,
      x.isBranch                                ,
      x.riskClassName                           ,
      x.facCodeName                             ,
      x.currency                                ,
      x.coinsRate                               ,
      x.closeCodeName                           ,
      x.createDate                              ,
      x.closeDate                               ,
      sum(x.amount) amount                      ,
      sum(x.premiumBigDecimal) premiumBigDecimal,
      sum(x.noTaxPremium) noTaxPremium          ,
      sum(x.baseAmount) baseAmount              ,
      sum(x.noTaxBasePremium) noTaxBasePremium  ,
      sum(outSumPremium) outSumPremium          ,
      x.claimCondition                          ,
      x.startDateDate                           ,
      x.endDateDate                             ,
      x.firstDateLong                           ,
      x.afterDateLong                           ,
      x.takeDate                                ,
      x.facOfferedRate                          ,
      x.facAbilityRate                          ,
      x.baseFacAbilityRate                      ,
      x.baseFacOfferedRate                      ,
      x.remarks                                 ,
      x.validStatus                             ,
      x.currencyEnquiry
    from
      (
        select
          a.sequenceNo               ,
          a.businessStatus           ,
          a.businessStatusDesc       ,
          a.className                ,
          a.branchName               ,
          a.reportNo                 ,
          a.branchOperatorName       ,
          a.operatorName             ,
          a.itemName                 ,
          a.isBranch                 ,
          a.riskClassName            ,
          a.facCodeName              ,
          a.currency                 ,
          a.coinsRate / 100 coinsRate,
          a.closeCodeName            ,
          (
            select
              min(c.CREATEDATE)
            from
              REINSVALIDENQUIRYREGISTER c
            where
              c.SEQUENCENO  = a.SEQUENCENO
            and c.VERSIONNO = '1') createDate                                      ,
          a.closeDate                                                              ,
          nvl(sum(b.amount), nvl(a.AMOUNT, 0)) amount                              ,
          nvl(sum(b.premium), nvl(a.PREMIUM, 0)) premiumBigDecimal                 ,
          nvl(sum(b.noTaxPremium), nvl(a.NOTAXPREMIUM, 0)) noTaxPremium            ,
          nvl(sum(b.baseAmount), nvl(a.BASEAMOUNT, 0)) baseAmount                  ,
          nvl(sum(b.noTaxBasePremium), nvl(a.NOTAXBASEPREMIUM, 0)) noTaxBasePremium,
          a.claimCondition                                                         ,
          a.startDate startDateDate                                                ,
          a.endDate endDateDate                                                    ,
          a.firstDate firstDateLong                                                ,
          a.afterDate afterDateLong                                                ,
          a.takeDate                                                               ,
          (
            select
              nvl(sum(bb.offeredLine), 0) / 100
            from
              RI_FACREGISTERREINS bb
            where
              a.sequenceno = bb.sequenceno
            group by
              bb.sequenceno) facOfferedRate,
          (
            select
              nvl(sum(bb.writtenLine), 0) / 100
            from
              RI_FACREGISTERREINS bb
            where
              a.sequenceno = bb.sequenceno
            group by
              bb.sequenceno) facAbilityRate,
          (
          (
            select
              nvl(sum(dd.NOTAXPREMIUM), 0)
            from
              REINSVALIDRECEIVE dd
            where
              cc.versionNo      = dd.versionNo
            and cc.ENQUIRYNO    = dd.ENQUIRYNO
            and dd.RISKUNITCODE != '0'
            and cc.ENQUIRYTYPE  = 'P') +
          (
            select
              nvl(sum(dd.CHGNOTAXPREMIUM), 0)
            from
              REINSVALIDRECEIVE dd
            where
              cc.versionNo      = dd.versionNo
            and cc.ENQUIRYNO    = dd.ENQUIRYNO
            and dd.RISKUNITCODE != '0'
            and cc.ENQUIRYTYPE  = 'E'
            and (
                exists
                (
                  select
                    1
                  from
                    REINSVALIDENQUIRY ee
                  where
                    ee.POLICYNO      = dd.POLICYNO
                  and ee.ENQUIRYTYPE = 'P')))) outSumPremium,
          round(
          (
            select
              nvl(sum(bb.offeredLine), 0)
            from
              RI_FACREGISTERREINS bb
            where
              a.sequenceno = bb.sequenceno
            group by
              bb.sequenceno) / a.coinsRate, 6) baseFacOfferedRate,
          round(
          (
            select
              nvl(sum(bb.writtenLine), 0)
            from
              RI_FACREGISTERREINS bb
            where
              a.sequenceno = bb.sequenceno
            group by
              bb.sequenceno) / a.coinsRate, 6) baseFacAbilityRate,
          a.remarks                                              ,
          a.validStatus                                          ,
          cc.currency currencyEnquiry
        from
          REINSVALIDENQUIRYREGISTER a
        left join
          Reinsenquiryregisterbinding b
        on
          a.SEQUENCENO  = b.SEQUENCENO
        and b.VALIDFLAG = '1'
        left join
          REINSVALIDENQUIRY cc
        on
          a.sequenceno     = cc.sequenceno
        and cc.VALIDFLAG   = '1'
        and b.RISKUNITCODE = cc.RISKUNITCODE
        and decode(cc.ENQUIRYTYPE,
              'E'                , cc.ENDORNO,
                cc.POLICYNO) = b.CERTIFYNO
        where
          a.VALIDFLAG = '1'
        and (
            exists
            (
              select
                1
              from
                reinsvalidriskunit e
              where
                e.policyno in
                (
                  select
                    f.certifyno
                  from
                    reinsenquiryregisterbinding f
                  where
                    f.certitype    = 'P'
                  and b.SEQUENCENO = f.SEQUENCENO
                  and f.VALIDFLAG  = '1')
              and b.certifyno      = e.certifyno)
            or not exists
            (
              select
                1
              from
                reinsenquiryregisterbinding f
              where
                f.SEQUENCENO  = a.SEQUENCENO
              and f.VALIDFLAG = '1'))
        And (
            a.sequenceNo IN ('FO01012018000001',
                            'FO01012018000003' ,
                            'FO01012018000004' ,
                            'FOnull2020000000'))
        and a.branchcode in
          (
            select
              comCode
            from
              FDCOMPANY
            where
              comPath like '%11000000%')
        group by
          a.sequenceNo        ,
          a.businessStatus    ,
          a.businessStatusDesc,
          a.className         ,
          a.branchName        ,
          a.reportNo          ,
          a.branchOperatorName,
          a.operatorName      ,
          a.itemName          ,
          a.isBranch          ,
          a.riskClassName     ,
          a.facCodeName       ,
          a.currency          ,
          a.coinsRate         ,
          a.closeCodeName     ,
          a.closeDate         ,
          a.claimCondition    ,
          a.startDate         ,
          a.endDate           ,
          a.firstDate         ,
          a.afterDate         ,
          a.takeDate          ,
          a.remarks           ,
          a.versionNo         ,
          a.validStatus       ,
          cc.CURRENCY         ,
          cc.versionNo        ,
          cc.ENQUIRYNO        ,
          cc.ENQUIRYTYPE      ,
          a.AMOUNT            ,
          a.PREMIUM           ,
          a.NOTAXPREMIUM      ,
          a.BASEAMOUNT        ,
          a.NOTAXBASEPREMIUM) x
    group by
      x.sequenceNo        ,
      x.businessStatus    ,
      x.businessStatusDesc,
      x.className         ,
      x.branchName        ,
      x.reportNo          ,
      x.branchOperatorName,
      x.operatorName      ,
      x.itemName          ,
      x.isBranch          ,
      x.riskClassName     ,
      x.facCodeName       ,
      x.currency          ,
      x.coinsRate         ,
      x.closeCodeName     ,
      x.createDate        ,
      x.closeDate         ,
      x.claimCondition    ,
      x.startDateDate     ,
      x.endDateDate       ,
      x.firstDateLong     ,
      x.afterDateLong     ,
      x.takeDate          ,
      x.facOfferedRate    ,
      x.facAbilityRate    ,
      x.baseFacAbilityRate,
      x.baseFacOfferedRate,
      x.remarks           ,
      x.validStatus       ,
      x.currencyEnquiry
  tidb_sql: >
    select x.sequenceno, x.businessstatus, x.businessstatusdesc, x.classname, x.branchname , x.reportno, x.branchoperatorname, x.operatorname, x.itemname, x.isbranch , x.riskclassname, x.faccodename, x.currency, x.coinsrate, x.closecodename , x.createdate, x.closedate, sum(x.amount) as amount , sum(x.premiumbigdecimal) as premiumbigdecimal, sum(x.notaxpremium) as notaxpremium , sum(x.baseamount) as baseamount, sum(x.notaxbasepremium) as notaxbasepremium , sum(outsumpremium) as outsumpremium, x.claimcondition, x.startdatedate , x.enddatedate, x.firstdatelong, x.afterdatelong, x.takedate, x.facofferedrate , x.facabilityrate, x.basefacabilityrate, x.basefacofferedrate, x.remarks, x.validstatus , x.currencyenquiry from ( select a.sequenceno, a.businessstatus, a.businessstatusdesc, a.classname, a.branchname , a.reportno, a.branchoperatorname, a.operatorname, a.itemname, a.isbranch , a.riskclassname, a.faccodename, a.currency, a.coinsrate / 100 as coinsrate , a.closecodename , ( select min(c.createdate) from reinsvalidenquiryregister c where c.sequenceno = a.sequenceno and c.versionno = '1' ) as createdate, a.closedate , ifnull(sum(b.amount), ifnull(a.amount, 0)) as amount , ifnull(sum(b.premium), ifnull(a.premium, 0)) as premiumbigdecimal , ifnull(sum(b.notaxpremium), ifnull(a.notaxpremium, 0)) as notaxpremium , ifnull(sum(b.baseamount), ifnull(a.baseamount, 0)) as baseamount , ifnull(sum(b.notaxbasepremium), ifnull(a.notaxbasepremium, 0)) as notaxbasepremium , a.claimcondition, a.startdate as startdatedate, a.enddate as enddatedate, a.firstdate as firstdatelong, a.afterdate as afterdatelong , a.takedate , ( select ifnull(sum(bb.offeredline), 0) / 100 from ri_facregisterreins bb where a.sequenceno = bb.sequenceno group by bb.sequenceno ) as facofferedrate , ( select ifnull(sum(bb.writtenline), 0) / 100 from ri_facregisterreins bb where a.sequenceno = bb.sequenceno group by bb.sequenceno ) as facabilityrate, ( select ifnull(sum(dd.notaxpremium), 0) from reinsvalidreceive dd where cc.versionno = dd.versionno and cc.enquiryno = dd.enquiryno and dd.riskunitcode != '0' and cc.enquirytype = 'p' ) + ( select ifnull(sum(dd.chgnotaxpremium), 0) from reinsvalidreceive dd where cc.versionno = dd.versionno and cc.enquiryno = dd.enquiryno and dd.riskunitcode != '0' and cc.enquirytype = 'e' and exists ( select 1 from reinsvalidenquiry ee where ee.policyno = dd.policyno and ee.enquirytype = 'p' ) ) as outsumpremium , round(( select ifnull(sum(bb.offeredline), 0) from ri_facregisterreins bb where a.sequenceno = bb.sequenceno group by bb.sequenceno ) / a.coinsrate, 6) as basefacofferedrate , round(( select ifnull(sum(bb.writtenline), 0) from ri_facregisterreins bb where a.sequenceno = bb.sequenceno group by bb.sequenceno ) / a.coinsrate, 6) as basefacabilityrate , a.remarks, a.validstatus, cc.currency as currencyenquiry from reinsvalidenquiryregister a left join reinsenquiryregisterbinding b on a.sequenceno = b.sequenceno left join reinsvalidenquiry cc on a.sequenceno = cc.sequenceno and b.riskunitcode = cc.riskunitcode and case cc.enquirytype when 'e' then cc.endorno else cc.policyno end = b.certifyno where b.validflag = '1' and cc.validflag = '1' and a.validflag = '1' and (exists ( select 1 from reinsvalidriskunit e where e.policyno in ( select f.certifyno from reinsenquiryregisterbinding f where f.certitype = 'p' and b.sequenceno = f.sequenceno and f.validflag = '1' ) and b.certifyno = e.certifyno ) or not exists ( select 1 from reinsenquiryregisterbinding f where f.sequenceno = a.sequenceno and f.validflag = '1' )) and a.branchcode in ( select comcode from fdcompany where compath like '%11000000%' ) and a.sequenceno in ('fo01012018000001', 'fo01012018000003', 'fo01012018000004', 'fonull2020000000') group by a.sequenceno, a.businessstatus, a.businessstatusdesc, a.classname, a.branchname, a.reportno, a.branchoperatorname, a.operatorname, a.itemname, a.isbranch, a.riskclassname, a.faccodename, a.currency, a.coinsrate, a.closecodename, a.closedate, a.claimcondition, a.startdate, a.enddate, a.firstdate, a.afterdate, a.takedate, a.remarks, a.versionno, a.validstatus, cc.currency, cc.versionno, cc.enquiryno, cc.enquirytype, a.amount, a.premium, a.notaxpremium, a.baseamount, a.notaxbasepremium ) x group by x.sequenceno, x.businessstatus, x.businessstatusdesc, x.classname, x.branchname, x.reportno, x.branchoperatorname, x.operatorname, x.itemname, x.isbranch, x.riskclassname, x.faccodename, x.currency, x.coinsrate, x.closecodename, x.createdate, x.closedate, x.claimcondition, x.startdatedate, x.enddatedate, x.firstdatelong, x.afterdatelong, x.takedate, x.facofferedrate, x.facabilityrate, x.basefacabilityrate, x.basefacofferedrate, x.remarks, x.validstatus, x.currencyenquiry
- comment: 复杂SQL-7
  oracle_sql: >
    select a.settleNo,
           a.freinsCode,
           a.comCode,
           a.comCName comName,
           a.taxAmount,
           a.amountLittle,
           a.paidTaxFeeCNY,
           a.paidPlanFeeCNY,
           a.differenceAmount
      from (select a.settleNo,
                   a.freinscode,
                   a.comCode,
                   c.comCName,
                   a.taxamount,
                   a.amountlittle,
                   b.paidtaxfeeCNY,
                   sum(b.paidtaxfeeCNY + paidPlanFeeCNY) paidPlanFeeCNY,
                   sum(b.paidtaxFeeCNY - a.taxamount) differenceAmount
              from (select a.settleNo,
                           a.reinsCode freinscode,
                           a.comcode,
                           sum(a.taxamount) taxamount,
                           sum(a.amountlittle) amountlittle
                      from FJINVOICEDETAIL a
                     where a.settleNo = 'S2024P0128'
                     group by a.settleNo, a.reinsCode, a.comcode
                     order by a.reinsCode) a,
                   (select invoicereinscode,
                           COMCODE,
                           sum(PAIDTAXFEECNY) PAIDTAXFEECNY,
                           SETTLENO,
                           sum(paidPlanFeeCNY) paidPlanFeeCNY
                      from (select decode(invoicereinscode,
                                          'RC0020',
                                          'RC0068',
                                          invoiceReinsCode) invoiceReinsCode,
                                   comCode,
                                   paidtaxfeeCNY,
                                   settleNo,
                                   paidPlanFeeCNY
                              from FJSETTLETAXDETAIL
                             where taxflag = '1'
                               and withholdflag = '0')
                     where 1 = 1
                     group by invoicereinscode, comCode, settleNo) b,
                   fdCompany c
             where a.settleno = b.settleNo
               and b.invoicereinscode = a.freinscode
               and b.comCode = a.comCode
               and a.comcode = c.comcode
               and a.SETTLENO = 'S2024P0128'
               and a.freinscode = 'RC0039'
             group by a.settleNo,
                      a.freinscode,
                      a.comCode,
                      c.comCName,
                      a.taxAmount,
                      a.amountLittle,
                      b.paidTaxFeeCNY
            union all
            select settleNo,
                   freinsCode,
                   comCode,
                   comName,
                   0 taxAmount,
                   0 amountLittle,
                   sum(paidtaxfeeCNY) paidTaxFeeCNY,
                   sum(paidPlanFeeCNY) paidPlanFeeCNY,
                   sum(differenceamount) differenceAmount
              from (select a.settleno,
                           decode(a.invoicereinscode,
                                  'RC0020',
                                  'RC0068',
                                  a.invoiceReinsCode) freinscode,
                           a.comcode,
                           b.comCName comname,
                           a.paidtaxfeeCNY,
                           (a.paidplanfeecny + a.Paidtaxfeecny) paidPlanFeeCNY,
                           a.paidtaxfeeCNY differenceamount
                      from FJSETTLETAXDETAIL a, fdCompany b
                     where a.taxFlag = '1'
                       and a.withHoldFlag = '0'
                       and a.paidtaxfeeCNY <> 0
                       and a.comcode = b.comcode
                       and a.settleno =  'S2024P0128'
                       and (a.comcode not in
                           (select COMCODE
                               from FJINVOICEDETAIL
                              where settleno = 'S2024P0128') or
                           a.invoicereinscode not in
                           (select REINSCODE
                               from FJINVOICEDETAIL
                              where settleno = 'S2024P0128')))
             where 1 = 1
               and freinscode = 'RC0039'
             group by settleNo, freinscode, comcode, comname) a
     where a.differenceAmount <> 0
     order by a.comCode
  tidb_sql: >
    select a.settleno, a.freinscode, a.comcode, a.comcname as comname, a.taxamount , a.amountlittle, a.paidtaxfeecny, a.paidplanfeecny, a.differenceamount from ( select a.settleno, a.freinscode, a.comcode, c.comcname, a.taxamount , a.amountlittle, b.paidtaxfeecny, sum(b.paidtaxfeecny + paidplanfeecny) as paidplanfeecny , sum(b.paidtaxfeecny - a.taxamount) as differenceamount from ( select a.settleno, a.reinscode as freinscode, a.comcode, sum(a.taxamount) as taxamount , sum(a.amountlittle) as amountlittle from fjinvoicedetail a where a.settleno = 's2024p0128' group by a.settleno, a.reinscode, a.comcode order by a.reinscode ) a join ( select invoicereinscode, comcode, sum(paidtaxfeecny) as paidtaxfeecny, settleno , sum(paidplanfeecny) as paidplanfeecny from ( select case invoicereinscode when 'rc0020' then 'rc0068' else invoicereinscode end as invoicereinscode , comcode, paidtaxfeecny, settleno, paidplanfeecny from fjsettletaxdetail where taxflag = '1' and withholdflag = '0' ) a where 1 = 1 group by invoicereinscode, comcode, settleno ) b on a.settleno = b.settleno and b.invoicereinscode = a.freinscode and b.comcode = a.comcode join fdcompany c on a.comcode = c.comcode where a.settleno = 's2024p0128' and a.freinscode = 'rc0039' group by a.settleno, a.freinscode, a.comcode, c.comcname, a.taxamount, a.amountlittle, b.paidtaxfeecny union all select settleno, freinscode, comcode, comname, 0 as taxamount , 0 as amountlittle, sum(paidtaxfeecny) as paidtaxfeecny, sum(paidplanfeecny) as paidplanfeecny , sum(differenceamount) as differenceamount from ( select a.settleno , case a.invoicereinscode when 'rc0020' then 'rc0068' else a.invoicereinscode end as freinscode , a.comcode, b.comcname as comname, a.paidtaxfeecny, a.paidplanfeecny + a.paidtaxfeecny as paidplanfeecny , a.paidtaxfeecny as differenceamount from fjsettletaxdetail a join fdcompany b on a.comcode = b.comcode where a.taxflag = '1' and a.withholdflag = '0' and a.paidtaxfeecny <> 0 and a.settleno = 's2024p0128' and (a.comcode not in ( select comcode from fjinvoicedetail where settleno = 's2024p0128' ) or a.invoicereinscode not in ( select reinscode from fjinvoicedetail where settleno = 's2024p0128' )) ) a where 1 = 1 and freinscode = 'rc0039' group by settleno, freinscode, comcode, comname ) a where a.differenceamount <> 0 order by a.comcode
- comment: 复杂SQL-8
  oracle_sql: >
    select x.* from (
    select sum(a.outStanding) osLoss ,decode(f.chinaInterestsFlag,'0','否','1','是',f.chinaInterestsFlag)  noCIAFlag,
    decode(e.CHANNELTYPE,'16','是','否')  noINTFlag,a.policyNo,c.PROVINCECOMCODE
    from reinsInPay a,fdcompany c,fdrisk d,FDCLASS g, reinsPolicyUnit e ,REINSPOLICYCEDED f
    where  a.comCode = c.comCode and substr(d.CLASSCODE,0,2) = g.CLASSCODE  and a.riskCode = d.riskCode and a.policyNo = e.policyNo and e.POLICYNO = f.POLICYNO
    and a.createdate = (select max(createdate) from reinsInPay where a.claimno = claimno and to_char(createdate,'yyyy-MM') || 'M' <= '2024-05M' )
    and not exists (select 1 from reinsInPay x,reinsclaimunit y where a.claimno = x.claimno and x.certino = y.certino and to_char(x.createdate, 'yyyy-MM') || 'M' <= '2024-05M' and y.endcaseflag = '1')
    group by  c.provincecomname,a.policyNo,a.startDate,a.endDate,a.comName,d.riskCname ,e.appliCode,a.insuredName,a.currency,c.PROVINCECOMCODE,e.APPLINAME,a.CLAIMNO
    ,f.CHINAINTERESTSFLAG,decode(e.CHANNELTYPE,'16','是','否'),g.CLASSCNAME )x where x.osLoss != 0 order by x.PROVINCECOMCODE,x.POLICYNO
  tidb_sql: >
    select x.* from ( select sum(a.outstanding) as osloss , case f.chinainterestsflag when '0' then '否' when '1' then '是' else f.chinainterestsflag end as nociaflag , case e.channeltype when '16' then '是' else '否' end as nointflag , a.policyno, c.provincecomcode from reinsinpay a join fdcompany c on a.comcode = c.comcode join fdrisk d on a.riskcode = d.riskcode join reinspolicyunit e on a.policyno = e.policyno join fdclass g on substring(d.classcode, 1, 2) = g.classcode join reinspolicyceded f on e.policyno = f.policyno where a.createdate = ( select max(createdate) from reinsinpay where a.claimno = claimno and (concat(date_format(createdate, '%y-%m'), 'm')) <= '2024-05m' ) and not exists ( select 1 from reinsinpay x join reinsclaimunit y on x.certino = y.certino where a.claimno = x.claimno and (concat(date_format(x.createdate, '%y-%m'), 'm')) <= '2024-05m' and y.endcaseflag = '1' ) group by c.provincecomname, a.policyno, a.startdate, a.enddate, a.comname, d.riskcname, e.applicode, a.insuredname, a.currency, c.provincecomcode, e.appliname, a.claimno, f.chinainterestsflag, case e.channeltype when '16' then '是' else '否' end, g.classcname ) x where x.osloss != 0 order by x.provincecomcode, x.policyno
- comment: 复杂SQL-9
  oracle_sql: >
    select
            d.comcname comName                                      ,
            a.sequenceId                                            ,
            a.name                                                  ,
            a.departcode                                            ,
            a.departName                                            ,
            decode(a.isfulltime                                     ,
                            '0'                                     ,'否',
                                    '1'                             ,'是',
                                            a.isfulltime) isfulltime,
            a.telephone                                             ,
            a.phone                                                 ,
            a.email                                                 ,
            a.leaderName                                            ,
            a.leaderTelephone                                       ,
            a.leaderPhone                                           ,
            a.leaderEmail                                           ,
            a.leaderDefaultId                                       ,
            a.higLeaderName                                         ,
            a.higleaderPhone                                        ,
            a.higLeaderPlane                                        ,
            a.higleaderEmail                                        ,
            a.higLeaderDefaultId                                    ,
            s.codecname sex                                         ,
            trunc(months_between(sysdate,a.birthdate)/12) age       ,
            a.nation                                                ,
            a.birthDate birthDate1                                  ,
            p.codecname politicCounten                              ,
            a.university                                            ,
            a.major                                                 ,
            ed.codecname education                                  ,
            ac.codecname degree                                     ,
            a.joinDate                                              ,
            a.position                                              ,
            eng.codecname engLevel                                  ,
            a.engLevelDesc                                          ,
            a.holdOfficeDate holdOfficeDate1                        ,
            a.nonCarYears                                           ,
            a.reinsureYears                                         ,
            a.experience                                            ,
            a.certificate                                           ,
            a.post                                                  ,
            a.remark                                                ,
            a.defaultIdCode                                         ,
            b.leaderName1                                           ,
            b.leadertelephone1                                      ,
            b.leaderEmail1                                          ,
            b. seniorleadername1                                    ,
            b.seniorleaderplane1                                    ,
            b.seniorleaderemail1                                    ,
            c.leaderName2                                           ,
            c.leadertelephone2                                      ,
            c.leaderEmail2                                          ,
            c.seniorleadername2                                     ,
            c.seniorleaderplane2                                    ,
            c.seniorleaderemail2                                    ,
            e.leaderName3                                           ,
            e.leadertelephone3                                      ,
            e.leaderEmail3                                          ,
            e.seniorleadername3                                     ,
            e.seniorleaderplane3                                    ,
            e.seniorleaderemail3                                    ,
            e.managerName                                           ,
            e.managerPlane                                          ,
            e.managerPhone                                          ,
            e.managerEmail                                          ,
            ft.train as fdusertrain
    from
            fduserlog a,
            (
                    select
                            codecname,
                            codecode
                    from
                            fdcode
                    where
                            codetype = 'Sex' ) s,
            (
                    select
                            codecname,
                            codecode
                    from
                            fdcode
                    where
                            codetype = 'PoliticalAffiliation' ) p,
            (
                    select
                            codecname,
                            codecode
                    from
                            fdcode
                    where
                            codetype = 'Education' ) ed,
            (
                    select
                            codecname,
                            codecode
                    from
                            fdcode
                    where
                            codetype = 'AcademicDegree' ) ac,
            (
                    select
                            codecname,
                            codecode
                    from
                            fdcode
                    where
                            codetype = 'EngLevel' ) eng,
            (
                    select
                            b.comCode                             ,
                            b.leaderName leaderName1              ,
                            b.leadertelephone leadertelephone1    ,
                            b.leaderemail leaderEmail1            ,
                            b.seniorleadername seniorleadername1  ,
                            b.seniorleaderplane seniorleaderplane1,
                            b.seniorleaderemail seniorleaderemail1
                    From
                            fdDepartment b
                    where
                            b.departcode like '%01') b ,
            (
                    select
                            c.comcode                             ,
                            c.leaderName leaderName2              ,
                            c.leadertelephone leadertelephone2    ,
                            c.leaderemail leaderEmail2            ,
                            c.seniorleadername seniorleadername2  ,
                            c.seniorleaderplane seniorleaderplane2,
                            c.seniorleaderemail seniorleaderemail2
                    From
                            fdDepartment c
                    where
                            c.departcode like '%02') c,
            fdCompany d                               ,
            (
                    select
                            e.comcode                             ,
                            e.leaderName leaderName3              ,
                            e.leadertelephone leadertelephone3    ,
                            e.leaderemail leaderEmail3            ,
                            e.seniorleadername seniorleadername3  ,
                            e.seniorleaderplane seniorleaderplane3,
                            e.seniorleaderemail seniorleaderemail3,
                            e.MANAGERNAME managerName             ,
                            e.MANAGERPLANE managerPlane           ,
                            e.MANAGEREMAIL managerEmail           ,
                            e.MANAGERPHONE managerPhone
                    From
                            fdDepartment e
                    where
                            e.departcode like '%03') e ,
            (
                    select
                            sapcode,
                            listagg(fduserTrain,';') within group (order by sapcode) as train
                    from
                            (
                                    select
                                            sapcode,
                                            concat('起止时间:',starttime||('-'||enddate))||concat(',培训项目名称:',trainitemname)||concat(',主办机构:',sponsor) ||concat((','||havecertificate),'证书')||concat(',备注:',remark) as fduserTrain
                                    from
                                            (
                                                    select
                                                            fdt.sapcode                                                         ,
                                                            to_char(fdt.starttime,'yyyy/MM') starttime                          ,
                                                            to_char(fdt.enddate,'yyyy/MM') enddate                              ,
                                                            fdt.trainitemname                                                   ,
                                                            fdt.sponsor                                                         ,
                                                            decode(fdt.havecertificate                                          ,
                                                                            '0'                                                 ,'没有',
                                                                                    '1'                                         ,'有',
                                                                                            fdt.havecertificate) havecertificate,
                                                            fdt.remark
                                                    from
                                                            fdusertrain fdt,
                                                            fduserlog z
                                                    where
                                                            fdt.sapcode = z.sapcode
                                                    and     z.verifyId in (:verifyId) ) )
                    group by
                            sapcode) ft
    where
            a.comcode      =b.comcode(+)
    and     a.comcode      =c.comcode(+)
    and     a.comcode      =e.comcode(+)
    and     a.comCode      = d.Comcode
    and     s.codecode     = a.sex
    and     p.codecode(+)  = a.politiccounten
    and     ed.codecode    = a.education
    and     ac.codecode(+) = a.degree
    and     eng.codecode   = a.englevel
    and     a.sapcode      = ft.sapcode(+)
    and     a.verifyId                  in (:verifyId)
    order by
            a.comCode
  tidb_sql: >
    select d.comcname as comname, a.sequenceid, a.name, a.departcode, a.departname , case a.isfulltime when '0' then '否' when '1' then '是' else a.isfulltime end as isfulltime , a.telephone, a.phone, a.email, a.leadername, a.leadertelephone , a.leaderphone, a.leaderemail, a.leaderdefaultid, a.higleadername, a.higleaderphone , a.higleaderplane, a.higleaderemail, a.higleaderdefaultid, s.codecname as sex , truncate(timestampdiff(month, a.birthdate, now()) / 12, 0) as age , a.nation, a.birthdate as birthdate1, p.codecname as politiccounten, a.university, a.major , ed.codecname as education, ac.codecname as degree, a.joindate, a.position, eng.codecname as englevel , a.engleveldesc, a.holdofficedate as holdofficedate1, a.noncaryears, a.reinsureyears, a.experience , a.certificate, a.post, a.remark, a.defaultidcode, b.leadername1 , b.leadertelephone1, b.leaderemail1, b.seniorleadername1, b.seniorleaderplane1, b.seniorleaderemail1 , c.leadername2, c.leadertelephone2, c.leaderemail2, c.seniorleadername2, c.seniorleaderplane2 , c.seniorleaderemail2, e.leadername3, e.leadertelephone3, e.leaderemail3, e.seniorleadername3 , e.seniorleaderplane3, e.seniorleaderemail3, e.managername, e.managerplane, e.managerphone , e.manageremail, ft.train as fdusertrain from fduserlog a join fdcompany d on a.comcode = d.comcode join ( select codecname, codecode from fdcode where codetype = 'education' ) ed on ed.codecode = a.education join ( select codecname, codecode from fdcode where codetype = 'englevel' ) eng on eng.codecode = a.englevel join ( select codecname, codecode from fdcode where codetype = 'sex' ) s on s.codecode = a.sex left join ( select codecname, codecode from fdcode where codetype = 'academicdegree' ) ac on a.degree = ac.codecode left join ( select b.comcode, b.leadername as leadername1, b.leadertelephone as leadertelephone1, b.leaderemail as leaderemail1, b.seniorleadername as seniorleadername1 , b.seniorleaderplane as seniorleaderplane1, b.seniorleaderemail as seniorleaderemail1 from fddepartment b where b.departcode like '%01' ) b on a.comcode = b.comcode left join ( select c.comcode, c.leadername as leadername2, c.leadertelephone as leadertelephone2, c.leaderemail as leaderemail2, c.seniorleadername as seniorleadername2 , c.seniorleaderplane as seniorleaderplane2, c.seniorleaderemail as seniorleaderemail2 from fddepartment c where c.departcode like '%02' ) c on a.comcode = c.comcode left join ( select e.comcode, e.leadername as leadername3, e.leadertelephone as leadertelephone3, e.leaderemail as leaderemail3, e.seniorleadername as seniorleadername3 , e.seniorleaderplane as seniorleaderplane3, e.seniorleaderemail as seniorleaderemail3, e.managername as managername, e.managerplane as managerplane, e.manageremail as manageremail , e.managerphone as managerphone from fddepartment e where e.departcode like '%03' ) e on a.comcode = e.comcode left join ( select sapcode, group_concat(fdusertrain order by sapcode separator ';') as train from ( select sapcode , concat(concat('起止时间:', starttime, '-', enddate), concat(',培训项目名称:', trainitemname), concat(',主办机构:', sponsor), concat(',', havecertificate, '证书'), concat(',备注:', remark)) as fdusertrain from ( select fdt.sapcode, date_format(fdt.starttime, '%y/%m') as starttime , date_format(fdt.enddate, '%y/%m') as enddate, fdt.trainitemname , fdt.sponsor , case fdt.havecertificate when '0' then '没有' when '1' then '有' else fdt.havecertificate end as havecertificate , fdt.remark from fdusertrain fdt join fduserlog z on fdt.sapcode = z.sapcode where z.verifyid in (:verifyid) ) a ) a group by sapcode ) ft on a.sapcode = ft.sapcode left join ( select codecname, codecode from fdcode where codetype = 'politicalaffiliation' ) p on a.politiccounten = p.codecode where a.verifyid in (:verifyid) order by a.comcode
- comment: 复杂SQL-10
  oracle_sql: >
    select
            colFlag                          ,
            sum(taxamount)      as taxamount      ,
            sum(amountlittle)   as amountlittle   ,
            sum(paidtaxfeeCNY)  as paidtaxfeeCNY  ,
            sum(paidPlanFeeCNY) as paidPlanFeeCNY ,
            sum(differenceAmount) differenceAmount,
            (
                    case
                    when
                            SUM(taxamount)        = 0
                            or SUM(blueTaxAmount) = 0
                    then
                            0
                    when
                            SUM(taxamount) > 0
                    then
                            (SUM(taxamount) / SUM(blueTaxAmount))
                    else
                            0
                    end) blueOcrRate,
            (
                    case
                    when
                            SUM(taxamount)       = 0
                            or SUM(redTaxAmount) = 0
                    then
                            0
                    when
                            SUM(taxamount) < 0
                    then
                            (SUM(taxamount) / SUM(redTaxAmount))
                    else
                            0
                    end) redOcrRate
    from
            (
                    select
                            'H' as colFlag                                      ,
                            SUM(a.taxamount) taxamount                          ,
                            SUM(a.amountlittle) amountlittle                    ,
                            SUM(b.paidtaxfeeCNY) paidtaxfeeCNY                  ,
                            sum(b.paidtaxfeeCNY + paidPlanFeeCNY) paidPlanFeeCNY,
                            sum(b.paidtaxFeeCNY - a.taxamount) differenceAmount ,
                            sum(blueTaxAmount) blueTaxAmount                    ,
                            sum(redTaxAmount) redTaxAmount
                    from
                            (
                                    select
                                            a.settleNo                      ,
                                            s.reinscomcode freinscode       ,
                                            b.reinscomcode as comcode       ,
                                            sum(a.taxamount) taxamount      ,
                                            sum(a.amountlittle) amountlittle,
                                            (
                                                    case
                                                    when
                                                            sum(a.taxamount) > 0
                                                    then
                                                            sum(a.taxamount)
                                                    else
                                                            0
                                                    end) blueTaxAmount,
                                            (
                                                    case
                                                    when
                                                            sum(a.taxamount) < 0
                                                    then
                                                            sum(a.taxamount)
                                                    else
                                                            0
                                                    end) redTaxAmount
                                    from
                                            fzinvoicedetail a,
                                            (
                                                    select
                                                            *
                                                    from
                                                            fzcompanytaxpayinfo
                                                    where
                                                            taxpayerno in
                                                            (
                                                                    select
                                                                            sellertaxid
                                                                    from
                                                                            fzinvoicedetail)) s,
                                            (
                                                    select
                                                            *
                                                    from
                                                            fzcompanytaxpayinfo
                                                    where
                                                            taxpayerno in
                                                            (
                                                                    select
                                                                            buyertaxId
                                                                    from
                                                                            fzinvoicedetail)) b
                                    where
                                            a.sellertaxid = s.taxpayerNo
                                    and     a.buyertaxid  = b.taxpayerNo
                                    group by
                                            settleno         ,
                                            s.reinscomcode   ,
                                            b.reinscomcode) a,
                            (
                                    select
                                            invoicereinscode                  ,
                                            COMCODE                           ,
                                            sum(PAIDTAXFEECNY) PAIDTAXFEECNY  ,
                                            SETTLENO                          ,
                                            sum(paidPlanFeeCNY) paidPlanFeeCNY,
                                            BLUESETTLENO                      ,
                                            BLUEINVOICECODE                   ,
                                            BLUEINVOICENO
                                    from
                                            (
                                                    select
                                                            decode(invoicereinscode                                   ,
                                                                            'RC0020'                                  , 'RC0068',
                                                                                    invoiceReinsCode) invoiceReinsCode,
                                                            comCode                                                   ,
                                                            paidtaxfeeCNY                                             ,
                                                            settleNo                                                  ,
                                                            paidPlanFeeCNY                                            ,
                                                            BLUESETTLENO                                              ,
                                                            BLUEINVOICECODE                                           ,
                                                            BLUEINVOICENO
                                                    from
                                                            fztaxdetail
                                                    where
                                                            locationflag = 'X'
                                                    and     taxflag      = '1'
                                                    and     withholdflag = '0')
                                    group by
                                            invoicereinscode,
                                            comCode         ,
                                            settleNo        ,
                                            blueSettleNo    ,
                                            blueInvoiceCode ,
                                            blueInvoiceNo) b,
                            (
                                    select
                                            *
                                    from
                                            fjsettle
                                    where
                                            validstatus ='1'
                                    and     to_char(createDate, 'yyyy-mm') in
                                            (
                                                    select
                                                            rlmonth
                                                    from
                                                            (
                                                                    SELECT
                                                                            TO_CHAR(ADD_MONTHS(SYSDATE, 1 - LEVEL), 'YYYY-MM') rlmonth
                                                                    FROM
                                                                            DUAL CONNECT BY LEVEL <= 12 ) a
                                                    where
                                                            substr(rlmonth, 0, 4) = to_char(sysdate, 'yyyy'))) c,
                            fzCompany d                                                                         ,
                            (
                                    select
                                            settleno,
                                            count(1) as numbs
                                    from
                                            (
                                                    SELECT DISTINCT
                                                            settleno,
                                                            INVOICEUPFLAG
                                                    FROM
                                                            fjinvoice)
                                    group by
                                            settleno) e,
                            (
                                    SELECT DISTINCT
                                            settleno,
                                            INVOICEUPFLAG
                                    FROM
                                            fjinvoice) f
                    where
                            a.settleno         = b.settleNo
                    and     b.settleNo         = c.settleNo
                    and     b.invoicereinscode = a.freinscode
                    and     b.comcode          = a.comcode
                    and     a.freinscode       = d.reinsComCode
                    and     c.settleNo         = e.settleNo(+)
                    and     c.settleNo         = f.settleNo(+)
                    and     a.freinscode       = d.reinsComCode
                    group by
                            c.relatRedInvoiceFlag,
                            d.accHead            ,
                            invoiceUpFlag        ,
                            e.numbs              ,
                            b.blueSettleNo       ,
                            b.blueInvoiceCode    ,
                            b.blueInvoiceNo
                    union all
                    select
                            'H' as colFlag                        ,
                            0   as taxamount                      ,
                            0   as amountLittle                   ,
                            sum(paidtaxfee) paidTaxFee            ,
                            sum(paidPlanFeeCNY) paidPlanFeeCNY    ,
                            sum(differenceamount) differenceamount,
                            (
                                    case
                                    when
                                            sum(paidPlanFeeCNY) >= 0
                                    then
                                            sum(paidPlanFeeCNY)
                                    end) as blueTaxAmount,
                            (
                                    case
                                    when
                                            sum(paidPlanFeeCNY) <= 0
                                    then
                                            sum(paidPlanFeeCNY)
                                    end) as redTaxAmount
                    from
                            (
                                    select
                                            a.paidtaxfee                                       ,
                                            (a.paidplanfeecny + a.Paidtaxfeecny) paidPlanFeeCNY,
                                            a.paidtaxfee differenceamount                      ,
                                            c.relatRedInvoiceFlag                              ,
                                            (
                                                    case
                                                    when
                                                            nvl(numbs, 0) > 1
                                                    then
                                                            '2'
                                                    when
                                                            nvl(numbs, 0) = 0
                                                    then
                                                            '3'
                                                    else
                                                            f.INVOICEUPFLAG
                                                    end) invoiceUpFlag,
                                            (
                                                    case
                                                    when
                                                            a.blueSettleNo is not null
                                                            or a.blueInvoiceCode is not null
                                                            or a.blueInvoiceNo is not null
                                                    then
                                                            '1'
                                                    else
                                                            '0'
                                                    end) uploadRedInfoFlag
                                    from
                                            fztaxdetail a,
                                            (
                                                    select
                                                            *
                                                    from
                                                            fjsettle
                                                    where
                                                            validstatus ='1'
                                                    and     to_char(createDate, 'yyyy-mm') in
                                                            (
                                                                    select
                                                                            rlmonth
                                                                    from
                                                                            (
                                                                                    SELECT
                                                                                            TO_CHAR(ADD_MONTHS(SYSDATE, 1 - LEVEL), 'YYYY-MM') rlmonth
                                                                                    FROM
                                                                                            DUAL CONNECT BY LEVEL <= 12) a
                                                                    where
                                                                            substr(rlmonth, 0, 4) = to_char(sysdate, 'yyyy'))) c,
                                            (
                                                    select
                                                            settleno,
                                                            count(1) as numbs
                                                    from
                                                            (
                                                                    SELECT DISTINCT
                                                                            settleno,
                                                                            INVOICEUPFLAG
                                                                    FROM
                                                                            fjinvoice)
                                                    group by
                                                            settleno) e,
                                            (
                                                    SELECT DISTINCT
                                                            settleno,
                                                            INVOICEUPFLAG
                                                    FROM
                                                            fjinvoice) f
                                    where
                                            a.locationFlag = 'X'
                                    and     a.taxFlag      = '1'
                                    and     a.withHoldFlag = '0'
                                    and     a.paidtaxfee   <> 0
                                    and     a.settleNo     = c.settleNo
                                    and     c.settleNo     = e.settleNo(+)
                                    and     c.settleNo     = f.settleNo(+)
                                    and     (
                                                    not exists
                                                    (
                                                            select
                                                                    reinscomcode
                                                            from
                                                                    fzcompanytaxpayinfo r,
                                                                    fzinvoicedetail g
                                                            where
                                                                    r.taxpayerno = g.buyertaxId
                                                            and     a.comcode    = r.reinscomcode
                                                            and     a.settleno   = g.settleno )
                                                    or not exists
                                                    (
                                                            select
                                                                    reinscomcode
                                                            from
                                                                    fzcompanytaxpayinfo r,
                                                                    fzinvoicedetail g
                                                            where
                                                                    r.taxpayerno       = g.sellertaxid
                                                            and     a.invoicereinscode = r.reinscomcode
                                                            and     a.settleno         = g.settleno)))
                    group by
                            relatRedInvoiceFlag,
                            invoiceUpFlag      ,
                            uploadRedInfoFlag) a
    group by
            colFlag
  tidb_sql: >
    select colflag, sum(taxamount) as taxamount, sum(amountlittle) as amountlittle , sum(paidtaxfeecny) as paidtaxfeecny, sum(paidplanfeecny) as paidplanfeecny , sum(differenceamount) as differenceamount , case when sum(taxamount) = 0 or sum(bluetaxamount) = 0 then 0 when sum(taxamount) > 0 then sum(taxamount) / sum(bluetaxamount) else 0 end as blueocrrate , case when sum(taxamount) = 0 or sum(redtaxamount) = 0 then 0 when sum(taxamount) < 0 then sum(taxamount) / sum(redtaxamount) else 0 end as redocrrate from ( select 'h' as colflag, sum(a.taxamount) as taxamount, sum(a.amountlittle) as amountlittle , sum(b.paidtaxfeecny) as paidtaxfeecny , sum(b.paidtaxfeecny + paidplanfeecny) as paidplanfeecny , sum(b.paidtaxfeecny - a.taxamount) as differenceamount , sum(bluetaxamount) as bluetaxamount, sum(redtaxamount) as redtaxamount from ( select a.settleno, s.reinscomcode as freinscode, b.reinscomcode as comcode, sum(a.taxamount) as taxamount , sum(a.amountlittle) as amountlittle , case when sum(a.taxamount) > 0 then sum(a.taxamount) else 0 end as bluetaxamount , case when sum(a.taxamount) < 0 then sum(a.taxamount) else 0 end as redtaxamount from fzinvoicedetail a join ( select * from fzcompanytaxpayinfo where taxpayerno in ( select buyertaxid from fzinvoicedetail ) ) b on a.buyertaxid = b.taxpayerno join ( select * from fzcompanytaxpayinfo where taxpayerno in ( select sellertaxid from fzinvoicedetail ) ) s on a.sellertaxid = s.taxpayerno group by settleno, s.reinscomcode, b.reinscomcode ) a join ( select invoicereinscode, comcode, sum(paidtaxfeecny) as paidtaxfeecny, settleno , sum(paidplanfeecny) as paidplanfeecny, bluesettleno, blueinvoicecode , blueinvoiceno from ( select case invoicereinscode when 'rc0020' then 'rc0068' else invoicereinscode end as invoicereinscode , comcode, paidtaxfeecny, settleno, paidplanfeecny, bluesettleno , blueinvoicecode, blueinvoiceno from fztaxdetail where locationflag = 'x' and taxflag = '1' and withholdflag = '0' ) a group by invoicereinscode, comcode, settleno, bluesettleno, blueinvoicecode, blueinvoiceno ) b on a.settleno = b.settleno and b.invoicereinscode = a.freinscode and b.comcode = a.comcode join fzcompany d on a.freinscode = d.reinscomcode join ( select * from fjsettle where validstatus = '1' and date_format(createdate, '%y-%m') in ( select rlmonth from ( select date_format(date_add(now(), interval 1 - level month ), '%y-%m') as rlmonth from dual connect by level <= 12 ) a where substring(rlmonth, 1, 4) = date_format(now(), '%y') ) ) c on b.settleno = c.settleno left join ( select settleno, count(1) as numbs from ( select distinct settleno, invoiceupflag from fjinvoice ) a group by settleno ) e on c.settleno = e.settleno left join ( select distinct settleno, invoiceupflag from fjinvoice ) f on c.settleno = f.settleno group by c.relatredinvoiceflag, d.acchead, invoiceupflag, e.numbs, b.bluesettleno, b.blueinvoicecode, b.blueinvoiceno union all select 'h' as colflag, 0 as taxamount, 0 as amountlittle, sum(paidtaxfee) as paidtaxfee , sum(paidplanfeecny) as paidplanfeecny, sum(differenceamount) as differenceamount , case when sum(paidplanfeecny) >= 0 then sum(paidplanfeecny) end as bluetaxamount , case when sum(paidplanfeecny) <= 0 then sum(paidplanfeecny) end as redtaxamount from ( select a.paidtaxfee, a.paidplanfeecny + a.paidtaxfeecny as paidplanfeecny, a.paidtaxfee as differenceamount, c.relatredinvoiceflag , case when ifnull(numbs, 0) > 1 then '2' when ifnull(numbs, 0) = 0 then '3' else f.invoiceupflag end as invoiceupflag , case when (a.bluesettleno is not null and a.bluesettleno != '') or (a.blueinvoicecode is not null and a.blueinvoicecode != '') or (a.blueinvoiceno is not null and a.blueinvoiceno != '') then '1' else '0' end as uploadredinfoflag from fztaxdetail a join ( select * from fjsettle where validstatus = '1' and date_format(createdate, '%y-%m') in ( select rlmonth from ( select date_format(date_add(now(), interval 1 - level month ), '%y-%m') as rlmonth from dual connect by level <= 12 ) a where substring(rlmonth, 1, 4) = date_format(now(), '%y') ) ) c on a.settleno = c.settleno left join ( select settleno, count(1) as numbs from ( select distinct settleno, invoiceupflag from fjinvoice ) a group by settleno ) e on c.settleno = e.settleno left join ( select distinct settleno, invoiceupflag from fjinvoice ) f on c.settleno = f.settleno where a.locationflag = 'x' and a.taxflag = '1' and a.withholdflag = '0' and a.paidtaxfee <> 0 and (not exists ( select reinscomcode from fzinvoicedetail g join fzcompanytaxpayinfo r on r.taxpayerno = g.buyertaxid where a.settleno = g.settleno and a.comcode = r.reinscomcode ) or not exists ( select reinscomcode from fzinvoicedetail g join fzcompanytaxpayinfo r on r.taxpayerno = g.sellertaxid where a.settleno = g.settleno and a.invoicereinscode = r.reinscomcode )) ) a group by relatredinvoiceflag, invoiceupflag, uploadredinfoflag ) a group by colflag